{"version":3,"sources":["../node_modules/webrtc-adapter/src/js/utils.js","../node_modules/webrtc-adapter/src/js/chrome/getusermedia.js","../node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js","../node_modules/sdp/sdp.js","../node_modules/webrtc-adapter/src/js/edge/getusermedia.js","../node_modules/webrtc-adapter/src/js/edge/edge_shim.js","../node_modules/webrtc-adapter/src/js/firefox/getusermedia.js","../node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js","../node_modules/webrtc-adapter/src/js/safari/safari_shim.js","../node_modules/webrtc-adapter/src/js/adapter_core.js","../node_modules/getusermedia/getusermedia.js","../node_modules/@epok.tech/gl-screen-triangle/index.js","../node_modules/@epok.tech/fn-lists/range.js","../node_modules/@epok.tech/fn-lists/reduce.js","../node_modules/@epok.tech/fn-lists/map.js","../node_modules/@epok.tech/fn-lists/each.js","../node_modules/@epok.tech/fn-lists/wrap-index.js","../node_modules/@epok.tech/gl-screen-triangle/uv-texture.vert.glsl","../index.frag.glsl","blur.frag.glsl","blend.frag.glsl","view.frag.glsl","index.js"],"names":["positions","vertices","count","length","dim","flat","range","n","Array","fill","reduce","r","prototype","f","a","out","undefined","call","map","v","i","each","e","forEach","wrap","wrapIndex","l","wrapGet","index","get","module","exports","canvas","document","querySelector","video","regl","blurMaps","texture","blurFrames","c","framebuffer","color","flowMaps","flowFrames","flowTo","blendFrames","resizers","autoplay","inRange","outRange","props","self","opticalFlow","videoSample","data","flipY","blurVideo","axes","passes","axis","flow","offset","lambda","alpha","blurPast","blend","fade","view","clearView","depth","stencil","clearBlurs","clearFlows","clearFlow","clearBlends","clear","tick","drawScreen","vert","attributes","position","drawBlur","frag","blurFrag","uniforms","frame","radius","prop","width","context","height","to","drawBlurProps","blur","Object","assign","drawBlurVideo","s","b","drawFlow","flowFrag","next","t","past","drawFlowProps","drawBlurPast","ps","drawBlend","blendFrag","drawBlendProps","drawView","viewFrag","drawViewProps","drawScene","draw","addEventListener","w","videoWidth","h","videoHeight","resize","Math","max","play","stream","console","warn","srcObject","src","URL","createObjectURL"],"mappings":";;;;;AAQA,aAEA,IAAA,GAAA,EAGA,EAAA,CACA,WAAA,SAAA,GACA,MAAA,kBAAA,EACA,IAAA,MAAA,yBAAA,EACA,4BAEA,EAAA,EACA,EAAA,8BACA,+BAGA,IAAA,WACA,GAAA,iBAAA,OAAA,CACA,GAAA,EACA,OAEA,oBAAA,SAAA,mBAAA,QAAA,KACA,QAAA,IAAA,MAAA,QAAA,aAaA,eAAA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,MAAA,GACA,OAAA,GAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,KASA,cAAA,WAEA,IAAA,EAAA,CACA,QAAA,KACA,QAAA,MAGA,GAAA,oBAAA,SAAA,OAAA,UAEA,OADA,EAAA,QAAA,iBACA,EAIA,GAAA,UAAA,gBACA,EAAA,QAAA,UACA,EAAA,QAAA,KAAA,eAAA,UAAA,UACA,sBAAA,QAGA,GAAA,UAAA,mBAEA,GAAA,OAAA,wBACA,EAAA,QAAA,SACA,EAAA,QAAA,KAAA,eAAA,UAAA,UACA,2BAAA,OAIA,CAYA,IAAA,UAAA,UAAA,MAAA,wBASA,OAFA,EAAA,QAAA,2EAEA,EARA,EAAA,QAAA,SACA,EAAA,QAAA,KAAA,eAAA,UAAA,UACA,0BAAA,OAWA,CAAA,IAAA,UAAA,eACA,UAAA,UAAA,MAAA,sBAQA,OADA,EAAA,QAAA,2BACA,EAPA,EAAA,QAAA,OACA,EAAA,QAAA,KAAA,eAAA,UAAA,UACA,qBAAA,GAQA,OAAA,IAKA,OAAA,QAAA,CACA,IAAA,EAAA,IACA,WAAA,EAAA,WACA,eAAA,EAAA,gBACA,eAAA,EAAA;;ACzHA,aACA,IAAA,EAAA,QAAA,eAAA,IAGA,OAAA,QAAA,WACA,IAAA,EAAA,SAAA,GACA,GAAA,iBAAA,GAAA,EAAA,WAAA,EAAA,SACA,OAAA,EAEA,IAAA,EAAA,GA4CA,OA3CA,OAAA,KAAA,GAAA,QAAA,SAAA,GACA,GAAA,YAAA,GAAA,aAAA,GAAA,gBAAA,EAAA,CAGA,IAAA,EAAA,iBAAA,EAAA,GAAA,EAAA,GAAA,CAAA,MAAA,EAAA,SACA,IAAA,EAAA,OAAA,iBAAA,EAAA,QACA,EAAA,IAAA,EAAA,IAAA,EAAA,OAEA,IAAA,EAAA,SAAA,EAAA,GACA,OAAA,EACA,EAAA,EAAA,OAAA,GAAA,cAAA,EAAA,MAAA,GAEA,aAAA,EAAA,WAAA,GAEA,QAAA,IAAA,EAAA,MAAA,CACA,EAAA,SAAA,EAAA,UAAA,GACA,IAAA,EAAA,GACA,iBAAA,EAAA,OACA,EAAA,EAAA,MAAA,IAAA,EAAA,MACA,EAAA,SAAA,KAAA,IACA,EAAA,IACA,EAAA,MAAA,IAAA,EAAA,MACA,EAAA,SAAA,KAAA,KAEA,EAAA,EAAA,GAAA,IAAA,EAAA,MACA,EAAA,SAAA,KAAA,SAGA,IAAA,EAAA,OAAA,iBAAA,EAAA,OACA,EAAA,UAAA,EAAA,WAAA,GACA,EAAA,UAAA,EAAA,GAAA,IAAA,EAAA,OAEA,CAAA,MAAA,OAAA,QAAA,SAAA,QACA,IAAA,EAAA,KACA,EAAA,UAAA,EAAA,WAAA,GACA,EAAA,UAAA,EAAA,EAAA,IAAA,EAAA,SAKA,EAAA,WACA,EAAA,UAAA,EAAA,UAAA,IAAA,OAAA,EAAA,WAEA,GAGA,EAAA,SAAA,EAAA,GAKA,IAJA,EAAA,KAAA,MAAA,KAAA,UAAA,MACA,EAAA,QACA,EAAA,MAAA,EAAA,EAAA,QAEA,GAAA,iBAAA,EAAA,MAAA,CAEA,IAAA,EAAA,EAAA,MAAA,WAGA,IAFA,EAAA,IAAA,iBAAA,EAAA,EAAA,CAAA,MAAA,OAEA,SAAA,EAAA,OAAA,gBAAA,EAAA,OACA,SAAA,EAAA,OAAA,gBAAA,EAAA,UACA,UAAA,aAAA,0BACA,UAAA,aAAA,0BAAA,qBACA,EAAA,MAAA,WACA,gBAAA,EAAA,OAAA,gBAAA,EAAA,OAEA,OAAA,UAAA,aAAA,mBACA,KAAA,SAAA,GAIA,IAAA,GAHA,EAAA,EAAA,OAAA,SAAA,GACA,MAAA,eAAA,EAAA,QAEA,KAAA,SAAA,GACA,OAAA,IAAA,EAAA,MAAA,cAAA,QAAA,WACA,EAAA,QAAA,EAAA,EAAA,OAAA,GAOA,OANA,IACA,EAAA,MAAA,SAAA,EAAA,MAAA,CAAA,MAAA,EAAA,UACA,CAAA,MAAA,EAAA,WAEA,EAAA,MAAA,EAAA,EAAA,OACA,EAAA,WAAA,KAAA,UAAA,IACA,EAAA,KAIA,EAAA,MAAA,EAAA,EAAA,OAGA,OADA,EAAA,WAAA,KAAA,UAAA,IACA,EAAA,IAGA,EAAA,SAAA,GACA,MAAA,CACA,KAAA,CACA,sBAAA,kBACA,4BAAA,wBACA,EAAA,OAAA,EAAA,KACA,QAAA,EAAA,QACA,WAAA,EAAA,eACA,SAAA,WACA,OAAA,KAAA,MAAA,KAAA,SAAA,MAAA,KAAA,WAaA,UAAA,aARA,SAAA,EAAA,EAAA,GACA,EAAA,EAAA,SAAA,GACA,UAAA,mBAAA,EAAA,EAAA,SAAA,GACA,EAAA,EAAA,SAQA,IAAA,EAAA,SAAA,GACA,OAAA,IAAA,QAAA,SAAA,EAAA,GACA,UAAA,aAAA,EAAA,EAAA,MAyBA,GArBA,UAAA,eACA,UAAA,aAAA,CACA,aAAA,EACA,iBAAA,WACA,OAAA,IAAA,QAAA,SAAA,GACA,IAAA,EAAA,CAAA,MAAA,aAAA,MAAA,cACA,OAAA,iBAAA,WAAA,SAAA,GACA,EAAA,EAAA,IAAA,SAAA,GACA,MAAA,CAAA,MAAA,EAAA,MACA,KAAA,EAAA,EAAA,MACA,SAAA,EAAA,GACA,QAAA,cAUA,UAAA,aAAA,aAIA,CAIA,IAAA,EAAA,UAAA,aAAA,aACA,KAAA,UAAA,cACA,UAAA,aAAA,aAAA,SAAA,GACA,OAAA,EAAA,EAAA,SAAA,GACA,OAAA,EAAA,GAAA,KAAA,SAAA,GACA,GAAA,EAAA,QAAA,EAAA,iBAAA,QACA,EAAA,QAAA,EAAA,iBAAA,OAIA,MAHA,EAAA,YAAA,QAAA,SAAA,GACA,EAAA,SAEA,IAAA,aAAA,GAAA,iBAEA,OAAA,GACA,SAAA,GACA,OAAA,QAAA,OAAA,EAAA,cArBA,UAAA,aAAA,aAAA,SAAA,GACA,OAAA,EAAA,SA4BA,IAAA,UAAA,aAAA,mBACA,UAAA,aAAA,iBAAA,WACA,EAAA,sDAGA,IAAA,UAAA,aAAA,sBACA,UAAA,aAAA,oBAAA,WACA,EAAA;;ACzLA,aACA,IAAA,EAAA,QAAA,eAAA,IACA,EAAA,QAAA,eAAA,eAEA,EAAA,CACA,gBAAA,WACA,OAAA,YAAA,OAAA,aAAA,OAAA,mBAGA,YAAA,WACA,iBAAA,SAAA,OAAA,mBAAA,YACA,OAAA,kBAAA,WACA,OAAA,eAAA,OAAA,kBAAA,UAAA,UAAA,CACA,IAAA,WACA,OAAA,KAAA,UAEA,IAAA,SAAA,GACA,IAAA,EAAA,KACA,KAAA,WACA,KAAA,oBAAA,QAAA,KAAA,UACA,KAAA,oBAAA,YAAA,KAAA,eAEA,KAAA,iBAAA,QAAA,KAAA,SAAA,GACA,KAAA,iBAAA,YAAA,KAAA,aAAA,SAAA,GAGA,EAAA,OAAA,iBAAA,WAAA,SAAA,GACA,IAAA,EAAA,IAAA,MAAA,SACA,EAAA,MAAA,EAAA,MACA,EAAA,SAAA,CAAA,MAAA,EAAA,OACA,EAAA,QAAA,CAAA,EAAA,QACA,EAAA,cAAA,KAEA,EAAA,OAAA,YAAA,QAAA,SAAA,GACA,IAAA,EAAA,IAAA,MAAA,SACA,EAAA,MAAA,EACA,EAAA,SAAA,CAAA,MAAA,GACA,EAAA,QAAA,CAAA,EAAA,QACA,KAAA,cAAA,IACA,KAAA,QACA,KAAA,WAMA,iBAAA,WACA,iBAAA,UACA,OAAA,kBACA,cAAA,OAAA,iBAAA,WAEA,OAAA,eAAA,OAAA,iBAAA,UAAA,YAAA,CACA,IAAA,WACA,OAAA,KAAA,YAEA,IAAA,SAAA,GACA,IAAA,EAAA,KAEA,KAAA,WAAA,EACA,KAAA,KACA,IAAA,gBAAA,KAAA,KAGA,GAIA,KAAA,IAAA,IAAA,gBAAA,GAGA,EAAA,iBAAA,WAAA,WACA,EAAA,KACA,IAAA,gBAAA,EAAA,KAEA,EAAA,IAAA,IAAA,gBAAA,KAEA,EAAA,iBAAA,cAAA,WACA,EAAA,KACA,IAAA,gBAAA,EAAA,KAEA,EAAA,IAAA,IAAA,gBAAA,MAhBA,KAAA,IAAA,QAwBA,mBAAA,WAEA,OAAA,kBAAA,SAAA,EAAA,GAGA,EAAA,kBACA,GAAA,EAAA,qBACA,EAAA,cAAA,EAAA,oBAGA,IAAA,EAAA,IAAA,wBAAA,EAAA,GACA,EAAA,EAAA,SAAA,KAAA,GAoEA,OAnEA,EAAA,SAAA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,KACA,EAAA,UAIA,GAAA,UAAA,OAAA,GAAA,mBAAA,EACA,OAAA,EAAA,EAAA,GAGA,IAAA,EAAA,SAAA,GACA,IAAA,EAAA,GAcA,OAbA,EAAA,SACA,QAAA,SAAA,GACA,IAAA,EAAA,CACA,GAAA,EAAA,GACA,UAAA,EAAA,UACA,KAAA,EAAA,MAEA,EAAA,QAAA,QAAA,SAAA,GACA,EAAA,GAAA,EAAA,KAAA,KAEA,EAAA,EAAA,IAAA,IAGA,GAIA,EAAA,SAAA,EAAA,GACA,IAAA,EAAA,IAAA,IAAA,OAAA,KAAA,GAAA,IAAA,SAAA,GACA,MAAA,CAAA,EAAA,EAAA,OAMA,OAJA,EAAA,GAAA,EACA,OAAA,KAAA,GAAA,QAAA,SAAA,GACA,EAAA,GAAA,EAAA,KAEA,GAGA,GAAA,UAAA,QAAA,EAAA,CAKA,OAAA,EAAA,MAAA,KAAA,CAJA,SAAA,GACA,EAAA,GAAA,EAAA,EAAA,MAIA,UAAA,KAIA,OAAA,IAAA,QAAA,SAAA,EAAA,GACA,IAAA,EAAA,QAAA,iBAAA,EACA,EAAA,MAAA,EAAA,CACA,SAAA,GACA,EAAA,EAAA,EAAA,MACA,IAGA,EAAA,MAAA,EAAA,CACA,SAAA,GACA,EAAA,EAAA,EAAA,GACA,EAAA,YACA,MAEA,KAAA,EAAA,IAGA,GAEA,OAAA,kBAAA,UAAA,wBAAA,UAGA,wBAAA,qBACA,OAAA,eAAA,OAAA,kBAAA,sBAAA,CACA,IAAA,WACA,OAAA,wBAAA,uBAKA,CAAA,cAAA,gBAAA,QAAA,SAAA,GACA,IAAA,EAAA,wBAAA,UAAA,GACA,wBAAA,UAAA,GAAA,WACA,IAAA,EAAA,KACA,GAAA,UAAA,OAAA,GAAA,IAAA,UAAA,QACA,iBAAA,UAAA,GAAA,CACA,IAAA,EAAA,IAAA,UAAA,OAAA,UAAA,QAAA,EACA,OAAA,IAAA,QAAA,SAAA,EAAA,GACA,EAAA,MAAA,EAAA,CAAA,EAAA,EAAA,MAGA,OAAA,EAAA,MAAA,KAAA,cAKA,EAAA,QAAA,IACA,CAAA,sBAAA,uBAAA,mBACA,QAAA,SAAA,GACA,IAAA,EAAA,wBAAA,UAAA,GACA,wBAAA,UAAA,GAAA,WACA,IAAA,EAAA,UACA,EAAA,KACA,EAAA,IAAA,QAAA,SAAA,EAAA,GACA,EAAA,MAAA,EAAA,CAAA,EAAA,GAAA,EAAA,MAEA,OAAA,EAAA,OAAA,EACA,EAEA,EAAA,KAAA,WACA,EAAA,GAAA,MAAA,KAAA,KAEA,SAAA,GACA,EAAA,QAAA,GACA,EAAA,GAAA,MAAA,KAAA,CAAA,SAQA,CAAA,sBAAA,uBAAA,mBACA,QAAA,SAAA,GACA,IAAA,EAAA,wBAAA,UAAA,GACA,wBAAA,UAAA,GAAA,WAGA,OAFA,UAAA,GAAA,IAAA,oBAAA,EACA,gBAAA,uBAAA,UAAA,IACA,EAAA,MAAA,KAAA,cAKA,IAAA,EACA,kBAAA,UAAA,gBACA,kBAAA,UAAA,gBAAA,WACA,OAAA,UAAA,GAMA,EAAA,MAAA,KAAA,YALA,UAAA,IACA,UAAA,GAAA,MAAA,MAEA,QAAA,cASA,OAAA,QAAA,CACA,gBAAA,EAAA,gBACA,YAAA,EAAA,YACA,iBAAA,EAAA,iBACA,mBAAA,EAAA,mBACA,iBAAA,QAAA;;ACtQA,aAGA,IAAA,EAAA,CAIA,mBAAA,WACA,OAAA,KAAA,SAAA,SAAA,IAAA,OAAA,EAAA,MAIA,EAAA,WAAA,EAAA,qBAGA,EAAA,WAAA,SAAA,GACA,OAAA,EAAA,OAAA,MAAA,MAAA,IAAA,SAAA,GACA,OAAA,EAAA,UAIA,EAAA,cAAA,SAAA,GAEA,OADA,EAAA,MAAA,QACA,IAAA,SAAA,EAAA,GACA,OAAA,EAAA,EAAA,KAAA,EAAA,GAAA,OAAA,UAKA,EAAA,YAAA,SAAA,EAAA,GACA,OAAA,EAAA,WAAA,GAAA,OAAA,SAAA,GACA,OAAA,IAAA,EAAA,QAAA,MAOA,EAAA,eAAA,SAAA,GAoBA,IAnBA,IAAA,EAQA,EAAA,CACA,YANA,EADA,IAAA,EAAA,QAAA,gBACA,EAAA,UAAA,IAAA,MAAA,KAEA,EAAA,UAAA,IAAA,MAAA,MAIA,GACA,UAAA,EAAA,GACA,SAAA,EAAA,GAAA,cACA,SAAA,SAAA,EAAA,GAAA,IACA,GAAA,EAAA,GACA,KAAA,SAAA,EAAA,GAAA,IAEA,KAAA,EAAA,IAGA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,EACA,OAAA,EAAA,IACA,IAAA,QACA,EAAA,eAAA,EAAA,EAAA,GACA,MACA,IAAA,QACA,EAAA,YAAA,SAAA,EAAA,EAAA,GAAA,IACA,MACA,IAAA,UACA,EAAA,QAAA,EAAA,EAAA,GACA,MACA,QACA,EAAA,EAAA,IAAA,EAAA,EAAA,GAIA,OAAA,GAIA,EAAA,eAAA,SAAA,GACA,IAAA,EAAA,GACA,EAAA,KAAA,EAAA,YACA,EAAA,KAAA,EAAA,WACA,EAAA,KAAA,EAAA,SAAA,eACA,EAAA,KAAA,EAAA,UACA,EAAA,KAAA,EAAA,IACA,EAAA,KAAA,EAAA,MAEA,IAAA,EAAA,EAAA,KAcA,OAbA,EAAA,KAAA,OACA,EAAA,KAAA,GACA,SAAA,GAAA,EAAA,gBACA,EAAA,cACA,EAAA,KAAA,SACA,EAAA,KAAA,EAAA,gBACA,EAAA,KAAA,SACA,EAAA,KAAA,EAAA,cAEA,EAAA,SAAA,QAAA,EAAA,SAAA,gBACA,EAAA,KAAA,WACA,EAAA,KAAA,EAAA,UAEA,aAAA,EAAA,KAAA,MAKA,EAAA,gBAAA,SAAA,GACA,OAAA,EAAA,OAAA,IAAA,MAAA,MAKA,EAAA,YAAA,SAAA,GACA,IAAA,EAAA,EAAA,OAAA,GAAA,MAAA,KACA,EAAA,CACA,YAAA,SAAA,EAAA,QAAA,KASA,OANA,EAAA,EAAA,GAAA,MAAA,KAEA,EAAA,KAAA,EAAA,GACA,EAAA,UAAA,SAAA,EAAA,GAAA,IAEA,EAAA,YAAA,IAAA,EAAA,OAAA,SAAA,EAAA,GAAA,IAAA,EACA,GAKA,EAAA,YAAA,SAAA,GACA,IAAA,EAAA,EAAA,YAIA,YAHA,IAAA,EAAA,uBACA,EAAA,EAAA,sBAEA,YAAA,EAAA,IAAA,EAAA,KAAA,IAAA,EAAA,WACA,IAAA,EAAA,YAAA,IAAA,EAAA,YAAA,IAAA,QAMA,EAAA,YAAA,SAAA,GACA,IAAA,EAAA,EAAA,OAAA,GAAA,MAAA,KACA,MAAA,CACA,GAAA,SAAA,EAAA,GAAA,IACA,UAAA,EAAA,GAAA,QAAA,KAAA,EAAA,EAAA,GAAA,MAAA,KAAA,GAAA,WACA,IAAA,EAAA,KAMA,EAAA,YAAA,SAAA,GACA,MAAA,aAAA,EAAA,IAAA,EAAA,cACA,EAAA,WAAA,aAAA,EAAA,UACA,IAAA,EAAA,UACA,IACA,IAAA,EAAA,IAAA,QAMA,EAAA,UAAA,SAAA,GAIA,IAHA,IACA,EADA,EAAA,GAEA,EAAA,EAAA,OAAA,EAAA,QAAA,KAAA,GAAA,MAAA,KACA,EAAA,EAAA,EAAA,EAAA,OAAA,IAEA,GADA,EAAA,EAAA,GAAA,OAAA,MAAA,MACA,GAAA,QAAA,EAAA,GAEA,OAAA,GAIA,EAAA,UAAA,SAAA,GACA,IAAA,EAAA,GACA,EAAA,EAAA,YAIA,QAHA,IAAA,EAAA,uBACA,EAAA,EAAA,sBAEA,EAAA,YAAA,OAAA,KAAA,EAAA,YAAA,OAAA,CACA,IAAA,EAAA,GACA,OAAA,KAAA,EAAA,YAAA,QAAA,SAAA,GACA,EAAA,KAAA,EAAA,IAAA,EAAA,WAAA,MAEA,GAAA,UAAA,EAAA,IAAA,EAAA,KAAA,KAAA,OAEA,OAAA,GAKA,EAAA,YAAA,SAAA,GACA,IAAA,EAAA,EAAA,OAAA,EAAA,QAAA,KAAA,GAAA,MAAA,KACA,MAAA,CACA,KAAA,EAAA,QACA,UAAA,EAAA,KAAA,OAIA,EAAA,YAAA,SAAA,GACA,IAAA,EAAA,GACA,EAAA,EAAA,YAYA,YAXA,IAAA,EAAA,uBACA,EAAA,EAAA,sBAEA,EAAA,cAAA,EAAA,aAAA,QAEA,EAAA,aAAA,QAAA,SAAA,GACA,GAAA,aAAA,EAAA,IAAA,EAAA,MACA,EAAA,WAAA,EAAA,UAAA,OAAA,IAAA,EAAA,UAAA,IACA,SAGA,GAKA,EAAA,eAAA,SAAA,GACA,IAAA,EAAA,EAAA,QAAA,KACA,EAAA,CACA,KAAA,SAAA,EAAA,OAAA,EAAA,EAAA,GAAA,KAEA,EAAA,EAAA,QAAA,IAAA,GAOA,OANA,GAAA,GACA,EAAA,UAAA,EAAA,OAAA,EAAA,EAAA,EAAA,EAAA,GACA,EAAA,MAAA,EAAA,OAAA,EAAA,IAEA,EAAA,UAAA,EAAA,OAAA,EAAA,GAEA,GAKA,EAAA,OAAA,SAAA,GACA,IAAA,EAAA,EAAA,YAAA,EAAA,UAAA,GACA,GAAA,EACA,OAAA,EAAA,OAAA,IAIA,EAAA,iBAAA,SAAA,GACA,IAAA,EAAA,EAAA,OAAA,IAAA,MAAA,KACA,MAAA,CACA,UAAA,EAAA,GAAA,cACA,MAAA,EAAA,KAOA,EAAA,kBAAA,SAAA,EAAA,GAKA,MAAA,CACA,KAAA,OACA,aANA,EAAA,YAAA,EAAA,EACA,kBAKA,IAAA,EAAA,oBAKA,EAAA,oBAAA,SAAA,EAAA,GACA,IAAA,EAAA,WAAA,EAAA,OAIA,OAHA,EAAA,aAAA,QAAA,SAAA,GACA,GAAA,iBAAA,EAAA,UAAA,IAAA,EAAA,MAAA,SAEA,GAKA,EAAA,iBAAA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,WAAA,GAWA,MARA,CACA,kBAFA,EAAA,EAAA,OAAA,EAAA,WAAA,KAEA,OAAA,SAAA,GACA,OAAA,IAAA,EAAA,QAAA,kBACA,GAAA,OAAA,IACA,SAAA,EAAA,OAAA,SAAA,GACA,OAAA,IAAA,EAAA,QAAA,gBACA,GAAA,OAAA,MAMA,EAAA,mBAAA,SAAA,GACA,MAAA,eAAA,EAAA,iBAAA,iBACA,EAAA,SAAA,QAIA,EAAA,mBAAA,SAAA,GASA,IARA,IAAA,EAAA,CACA,OAAA,GACA,iBAAA,GACA,cAAA,GACA,KAAA,IAGA,EADA,EAAA,WAAA,GACA,GAAA,MAAA,KACA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CACA,IAAA,EAAA,EAAA,GACA,EAAA,EAAA,YACA,EAAA,YAAA,EAAA,KAAA,GACA,GAAA,EAAA,CACA,IAAA,EAAA,EAAA,YAAA,GACA,EAAA,EAAA,YACA,EAAA,UAAA,EAAA,KAQA,OANA,EAAA,WAAA,EAAA,OAAA,EAAA,UAAA,EAAA,IAAA,GACA,EAAA,aAAA,EAAA,YACA,EAAA,aAAA,EAAA,KACA,IAAA,EAAA,aACA,EAAA,OAAA,KAAA,GAEA,EAAA,KAAA,eACA,IAAA,MACA,IAAA,SACA,EAAA,cAAA,KAAA,EAAA,KAAA,iBAWA,OAJA,EAAA,YAAA,EAAA,aAAA,QAAA,SAAA,GACA,EAAA,iBAAA,KAAA,EAAA,YAAA,MAGA,GAKA,EAAA,oBAAA,SAAA,EAAA,GACA,IAAA,EAAA,GAGA,GAAA,KAAA,EAAA,IACA,GAAA,EAAA,OAAA,OAAA,EAAA,IAAA,IACA,GAAA,sBACA,GAAA,EAAA,OAAA,IAAA,SAAA,GACA,YAAA,IAAA,EAAA,qBACA,EAAA,qBAEA,EAAA,cACA,KAAA,KAAA,OAEA,GAAA,uBACA,GAAA,8BAGA,EAAA,OAAA,QAAA,SAAA,GACA,GAAA,EAAA,YAAA,GACA,GAAA,EAAA,UAAA,GACA,GAAA,EAAA,YAAA,KAEA,IAAA,EAAA,EAeA,OAdA,EAAA,OAAA,QAAA,SAAA,GACA,EAAA,SAAA,IACA,EAAA,EAAA,YAGA,EAAA,IACA,GAAA,cAAA,EAAA,QAEA,GAAA,iBAEA,EAAA,iBAAA,QAAA,SAAA,GACA,GAAA,EAAA,YAAA,KAGA,GAKA,EAAA,2BAAA,SAAA,GACA,IAcA,EAdA,EAAA,GACA,EAAA,EAAA,mBAAA,GACA,GAAA,IAAA,EAAA,cAAA,QAAA,OACA,GAAA,IAAA,EAAA,cAAA,QAAA,UAGA,EAAA,EAAA,YAAA,EAAA,WACA,IAAA,SAAA,GACA,OAAA,EAAA,eAAA,KAEA,OAAA,SAAA,GACA,MAAA,UAAA,EAAA,YAEA,EAAA,EAAA,OAAA,GAAA,EAAA,GAAA,KAGA,EAAA,EAAA,YAAA,EAAA,oBACA,IAAA,SAAA,GACA,IAAA,EAAA,EAAA,MAAA,KAEA,OADA,EAAA,QACA,EAAA,IAAA,SAAA,GACA,OAAA,SAAA,EAAA,QAGA,EAAA,OAAA,GAAA,EAAA,GAAA,OAAA,GAAA,EAAA,GAAA,KAAA,IACA,EAAA,EAAA,GAAA,IAGA,EAAA,OAAA,QAAA,SAAA,GACA,GAAA,QAAA,EAAA,KAAA,eAAA,EAAA,WAAA,IAAA,CACA,IAAA,EAAA,CACA,KAAA,EACA,iBAAA,SAAA,EAAA,WAAA,IAAA,IACA,IAAA,CACA,KAAA,IAGA,EAAA,KAAA,GACA,KACA,EAAA,KAAA,MAAA,KAAA,UAAA,KACA,IAAA,CACA,KAAA,EACA,UAAA,EAAA,aAAA,OAEA,EAAA,KAAA,OAIA,IAAA,EAAA,QAAA,GACA,EAAA,KAAA,CACA,KAAA,IAKA,IAAA,EAAA,EAAA,YAAA,EAAA,MAWA,OAVA,EAAA,SACA,IAAA,EAAA,GAAA,QAAA,WACA,EAAA,SAAA,EAAA,GAAA,OAAA,GAAA,IACA,IAAA,EAAA,GAAA,QAAA,WACA,EAAA,SAAA,EAAA,GAAA,OAAA,GAAA,KAEA,EAAA,QAAA,SAAA,GACA,EAAA,WAAA,KAGA,GAIA,EAAA,oBAAA,SAAA,GACA,IAAA,EAAA,GAKA,EAAA,EAAA,YAAA,EAAA,WACA,IAAA,SAAA,GACA,OAAA,EAAA,eAAA,KAEA,OAAA,SAAA,GACA,MAAA,UAAA,EAAA,YACA,GACA,IACA,EAAA,MAAA,EAAA,MACA,EAAA,KAAA,EAAA,MAKA,IAAA,EAAA,EAAA,YAAA,EAAA,gBACA,EAAA,YAAA,EAAA,OAAA,EACA,EAAA,SAAA,IAAA,EAAA,OAIA,IAAA,EAAA,EAAA,YAAA,EAAA,cAGA,OAFA,EAAA,IAAA,EAAA,OAAA,EAEA,GAKA,EAAA,UAAA,SAAA,GACA,IAAA,EACA,EAAA,EAAA,YAAA,EAAA,WACA,GAAA,IAAA,EAAA,OAEA,MAAA,CAAA,QADA,EAAA,EAAA,GAAA,OAAA,GAAA,MAAA,MACA,GAAA,MAAA,EAAA,IAEA,IAAA,EAAA,EAAA,YAAA,EAAA,WACA,IAAA,SAAA,GACA,OAAA,EAAA,eAAA,KAEA,OAAA,SAAA,GACA,MAAA,SAAA,EAAA,YAEA,OAAA,EAAA,OAAA,EAEA,CAAA,QADA,EAAA,EAAA,GAAA,MAAA,MAAA,MACA,GAAA,MAAA,EAAA,SAFA,GAMA,EAAA,wBAAA,WAEA,MAAA,yFAMA,EAAA,kBAAA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,oBAAA,EAAA,KAAA,GAyBA,GAtBA,GAAA,EAAA,mBACA,EAAA,YAAA,sBAGA,GAAA,EAAA,oBACA,EAAA,cAAA,qBACA,UAAA,EAAA,UAAA,UAEA,GAAA,SAAA,EAAA,IAAA,OAEA,EAAA,UACA,GAAA,KAAA,EAAA,UAAA,OACA,EAAA,WAAA,EAAA,YACA,GAAA,iBACA,EAAA,UACA,GAAA,iBACA,EAAA,YACA,GAAA,iBAEA,GAAA,iBAGA,EAAA,UAAA,CAEA,IAAA,EAAA,QAAA,EAAA,GAAA,IACA,EAAA,UAAA,MAAA,GAAA,OACA,GAAA,KAAA,EAGA,GAAA,UAAA,EAAA,uBAAA,GAAA,KACA,IAAA,EACA,EAAA,uBAAA,GAAA,MACA,GAAA,UAAA,EAAA,uBAAA,GAAA,IAAA,KACA,IAAA,EACA,GAAA,oBACA,EAAA,uBAAA,GAAA,KAAA,IACA,EAAA,uBAAA,GAAA,IAAA,KACA,QAUA,OANA,GAAA,UAAA,EAAA,uBAAA,GAAA,KACA,UAAA,EAAA,WAAA,OACA,EAAA,WAAA,EAAA,uBAAA,GAAA,MACA,GAAA,UAAA,EAAA,uBAAA,GAAA,IAAA,KACA,UAAA,EAAA,WAAA,QAEA,GAIA,EAAA,aAAA,SAAA,EAAA,GAGA,IADA,IAAA,EAAA,EAAA,WAAA,GACA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,OAAA,EAAA,IACA,IAAA,aACA,IAAA,aACA,IAAA,aACA,IAAA,aACA,OAAA,EAAA,GAAA,OAAA,GAKA,OAAA,EACA,EAAA,aAAA,GAEA,YAGA,EAAA,QAAA,SAAA,GAGA,OAFA,EAAA,WAAA,GACA,GAAA,MAAA,KACA,GAAA,OAAA,IAGA,EAAA,WAAA,SAAA,GACA,MAAA,MAAA,EAAA,MAAA,IAAA,GAAA,IAIA,OAAA,QAAA;;ACrlBA,aAGA,OAAA,QAAA,WACA,IAYA,EAAA,UAAA,aAAA,aACA,KAAA,UAAA,cACA,UAAA,aAAA,aAAA,SAAA,GACA,OAAA,EAAA,GAAA,MAAA,SAAA,GACA,OAAA,QAAA,OAhBA,SAAA,GACA,MAAA,CACA,KAAA,CAAA,sBAAA,mBAAA,EAAA,OAAA,EAAA,KACA,QAAA,EAAA,QACA,WAAA,EAAA,WACA,SAAA,WACA,OAAA,KAAA,OAUA,CAAA;;ACpBA,aAEA,IAAA,EAAA,QAAA,OACA,EAAA,QAAA,YAAA,eAEA,EAAA,CACA,mBAAA,WACA,GAAA,OAAA,eAAA,CAGA,OAAA,kBACA,OAAA,gBAAA,SAAA,GACA,OAAA,IAMA,OAAA,wBACA,OAAA,sBAAA,SAAA,GACA,OAAA,IAKA,IAAA,EAAA,OAAA,yBACA,iBAAA,UAAA,WACA,OAAA,eAAA,iBAAA,UAAA,UAAA,CACA,IAAA,SAAA,GACA,EAAA,IAAA,KAAA,KAAA,GACA,IAAA,EAAA,IAAA,MAAA,WACA,EAAA,QAAA,EACA,KAAA,cAAA,MAKA,OAAA,kBAAA,SAAA,GACA,IAAA,EAAA,KAEA,EAAA,SAAA,yBAwCA,GAvCA,CAAA,mBAAA,sBAAA,iBACA,QAAA,SAAA,GACA,EAAA,GAAA,EAAA,GAAA,KAAA,KAGA,KAAA,eAAA,KACA,KAAA,YAAA,KACA,KAAA,QAAA,KACA,KAAA,eAAA,KACA,KAAA,uBAAA,KACA,KAAA,2BAAA,KACA,KAAA,oBAAA,KACA,KAAA,cAAA,KAEA,KAAA,aAAA,GACA,KAAA,cAAA,GACA,KAAA,gBAAA,WACA,OAAA,EAAA,cAEA,KAAA,iBAAA,WACA,OAAA,EAAA,eAGA,KAAA,iBAAA,IAAA,sBAAA,CACA,KAAA,GACA,IAAA,KAEA,KAAA,kBAAA,IAAA,sBAAA,CACA,KAAA,GACA,IAAA,KAEA,KAAA,eAAA,SACA,KAAA,mBAAA,MACA,KAAA,kBAAA,MAEA,KAAA,WAAA,CACA,aAAA,MACA,WAAA,IAEA,GAAA,EAAA,mBACA,OAAA,EAAA,oBACA,IAAA,MACA,IAAA,QACA,KAAA,WAAA,aAAA,EAAA,mBACA,MACA,IAAA,OAEA,MAAA,IAAA,UAAA,2CAQA,GAFA,KAAA,YAAA,GAAA,eAAA,EAAA,aAEA,GAAA,EAAA,WAAA,CAKA,IAAA,EAAA,KAAA,MAAA,KAAA,UAAA,EAAA,aACA,KAAA,WAAA,WAAA,EAAA,OAAA,SAAA,GACA,GAAA,GAAA,EAAA,KAAA,CACA,IAAA,EAAA,EAAA,KAWA,MAVA,iBAAA,IACA,EAAA,CAAA,OAEA,EAAA,EAAA,OAAA,SAAA,GACA,OAAA,IAAA,EAAA,QAAA,WACA,IAAA,EAAA,QAAA,mBACA,IAAA,EAAA,QAAA,WACA,IAAA,EAAA,QAAA,UACA,EAAA,SAAA,QACA,IAGA,OAAA,IAGA,KAAA,QAAA,EAIA,KAAA,aAAA,GAKA,KAAA,0BAAA,IAGA,OAAA,kBAAA,UAAA,wBAAA,WACA,IAAA,EAAA,KACA,EAAA,EAAA,cAAA,EAAA,iBAAA,KAGA,KAAA,0BAAA,QAAA,SAAA,GAEA,IADA,EAAA,WAAA,IAAA,OAAA,KAAA,EAAA,WAAA,OAEA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,KACA,IAAA,EAAA,GAAA,QAAA,iCACA,EAAA,IAAA,gCAIA,IADA,EAAA,UAAA,UAAA,QAAA,yBAEA,EAAA,EAAA,UAAA,cAAA,IACA,KAAA,EAAA,UAAA,UAAA,SAEA,EAAA,iBAAA,IAAA,EAAA,KAAA,IACA,EAAA,cAAA,GACA,OAAA,EAAA,gBACA,EAAA,eAAA,GAEA,EAAA,WAAA,aAAA,EAAA,oBACA,EAAA,aAAA,MAAA,SAAA,GACA,OAAA,EAAA,aACA,cAAA,EAAA,YAAA,UAGA,EAAA,kBAAA,cAIA,KAAA,0BAAA,IAGA,OAAA,kBAAA,UAAA,iBAAA,WACA,OAAA,KAAA,SAGA,OAAA,kBAAA,UAAA,UAAA,SAAA,GAGA,IAAA,EAAA,EAAA,QACA,EAAA,YAAA,QAAA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,YAAA,GACA,EAAA,iBAAA,UAAA,SAAA,GACA,EAAA,QAAA,EAAA,YAGA,KAAA,aAAA,KAAA,GACA,KAAA,+BAGA,OAAA,kBAAA,UAAA,aAAA,SAAA,GACA,IAAA,EAAA,KAAA,aAAA,QAAA,GACA,GAAA,IACA,KAAA,aAAA,OAAA,EAAA,GACA,KAAA,gCAIA,OAAA,kBAAA,UAAA,WAAA,WACA,OAAA,KAAA,aAAA,OAAA,SAAA,GACA,QAAA,EAAA,YAEA,IAAA,SAAA,GACA,OAAA,EAAA,aAIA,OAAA,kBAAA,UAAA,aAAA,WACA,OAAA,KAAA,aAAA,OAAA,SAAA,GACA,QAAA,EAAA,cAEA,IAAA,SAAA,GACA,OAAA,EAAA,eAKA,OAAA,kBAAA,UAAA,uBACA,SAAA,EAAA,GACA,IAAA,EAAA,CACA,OAAA,GACA,iBAAA,GACA,cAAA,IA2CA,OAzCA,EAAA,OAAA,QAAA,SAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,OAAA,IAAA,CACA,IAAA,EAAA,EAAA,OAAA,GACA,GAAA,EAAA,KAAA,gBAAA,EAAA,KAAA,eACA,EAAA,YAAA,EAAA,UAAA,CAEA,EAAA,YAAA,KAAA,IAAA,EAAA,YACA,EAAA,aAEA,EAAA,OAAA,KAAA,GAGA,EAAA,aAAA,EAAA,aAAA,OAAA,SAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,aAAA,OAAA,IACA,GAAA,EAAA,aAAA,GAAA,OAAA,EAAA,MACA,EAAA,aAAA,GAAA,YAAA,EAAA,UACA,OAAA,EAGA,OAAA,IAIA,UAKA,EAAA,iBACA,QAAA,SAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,iBAAA,OACA,IAAA,CACA,IAAA,EAAA,EAAA,iBAAA,GACA,GAAA,EAAA,MAAA,EAAA,IAAA,CACA,EAAA,iBAAA,KAAA,GACA,UAMA,GAIA,OAAA,kBAAA,UAAA,4BACA,SAAA,EAAA,GACA,IAAA,EAAA,KACA,EAAA,IAAA,eAAA,EAAA,YACA,EAAA,IAAA,gBAAA,GACA,EAAA,iBAAA,SAAA,GACA,IAAA,EAAA,IAAA,MAAA,gBACA,EAAA,UAAA,CAAA,OAAA,EAAA,cAAA,GAEA,IAAA,EAAA,EAAA,UACA,GAAA,GAAA,IAAA,OAAA,KAAA,GAAA,OAEA,QAGA,IAAA,EAAA,QACA,EAAA,MAAA,aAQA,EAAA,UAAA,UACA,sDAGA,EAAA,UAAA,SAAA,EAAA,UAAA,EAAA,EACA,EAAA,UAAA,UAAA,EAAA,eAAA,IAIA,IAAA,EAAA,EAAA,cAAA,EAAA,iBAAA,MAEA,IADA,EAAA,UAAA,UAAA,QAAA,uBAEA,EAAA,EAAA,UAAA,cAAA,IACA,KAAA,EAAA,UAAA,UAAA,OAEA,EAAA,EAAA,UAAA,cAAA,IACA,0BAEA,EAAA,iBAAA,IAAA,EAAA,KAAA,IAEA,IAAA,EAAA,EAAA,aAAA,MAAA,SAAA,GACA,OAAA,EAAA,aACA,cAAA,EAAA,YAAA,QAKA,OAAA,EAAA,mBACA,IAAA,MACA,EAAA,0BAAA,KAAA,GACA,GAAA,GACA,EAAA,0BAAA,KACA,IAAA,MAAA,iBAEA,MACA,IAAA,YACA,EAAA,0BACA,EAAA,cAAA,GACA,OAAA,EAAA,gBACA,EAAA,eAAA,GAEA,IACA,EAAA,cAAA,IAAA,MAAA,iBACA,OAAA,EAAA,gBACA,EAAA,eAAA,IAAA,MAAA,iBAEA,EAAA,kBAAA,cAUA,EAAA,iBAAA,WACA,EAAA,0BAGA,IAAA,EAAA,IAAA,iBAAA,GAUA,OATA,EAAA,kBAAA,WACA,EAAA,0BAEA,EAAA,QAAA,WAEA,EAAA,MAAA,SACA,EAAA,0BAGA,CACA,YAAA,EACA,aAAA,EACA,cAAA,IAKA,OAAA,kBAAA,UAAA,YAAA,SAAA,EACA,EAAA,GACA,IAAA,EAAA,KAAA,uBAAA,EAAA,kBACA,EAAA,oBACA,GAAA,EAAA,YACA,EAAA,UAAA,EAAA,uBACA,EAAA,KAAA,CACA,MAAA,EAAA,YAEA,EAAA,uBAAA,SACA,EAAA,KAAA,KAAA,EAAA,uBAAA,GAAA,MAEA,EAAA,UAAA,KAAA,IAEA,GAAA,EAAA,cAEA,UAAA,EAAA,MACA,EAAA,wBACA,EAAA,uBAAA,QAAA,SAAA,UACA,EAAA,MAGA,EAAA,UAAA,EAAA,uBACA,EAAA,KAAA,CACA,MAAA,EAAA,OAEA,EAAA,uBAAA,SACA,EAAA,KAAA,KAAA,EAAA,uBAAA,GAAA,MAEA,EAAA,YAAA,QAAA,KAIA,OAAA,kBAAA,UAAA,oBACA,SAAA,GACA,IACA,EACA,EAFA,EAAA,KAGA,GAAA,UAAA,EAAA,KAIA,KAAA,gBAGA,EAAA,EAAA,cAAA,EAAA,KACA,EAAA,EAAA,QACA,EAAA,QAAA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,mBAAA,GACA,EAAA,cAAA,GAAA,kBAAA,IAEA,KAAA,aAAA,KAAA,qBACA,KAAA,oBAEA,GAAA,WAAA,EAAA,KAAA,CACA,EAAA,EAAA,cAAA,EAAA,kBAAA,KACA,EAAA,EAAA,QACA,IAAA,EAAA,EAAA,YAAA,EACA,cAAA,OAAA,EACA,EAAA,QAAA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,aAAA,GACA,EAAA,EAAA,YACA,EAAA,EAAA,aACA,EAAA,EAAA,cACA,EAAA,EAAA,kBACA,EAAA,EAAA,mBAKA,KAFA,MADA,EAAA,MAAA,KAAA,GAAA,GACA,MAAA,IAAA,GAAA,MAEA,EAAA,cAAA,CACA,IAAA,EAAA,EAAA,iBACA,EAAA,GACA,GAAA,EAAA,CACA,IAAA,EAAA,EAAA,YAAA,EAAA,gBACA,IAAA,SAAA,GACA,OAAA,EAAA,eAAA,KAEA,OAAA,SAAA,GACA,MAAA,MAAA,EAAA,YAKA,EAAA,QACA,EAAA,oBAAA,GAGA,IAAA,EAAA,EAAA,kBACA,EAAA,GACA,IACA,EAAA,KAAA,UAGA,EAAA,aAAA,IAAA,IACA,EAAA,MAAA,EAAA,EACA,EAAA,cAAA,cACA,EAAA,MAAA,IAIA,IAAA,EAAA,EAAA,uBAAA,EACA,GAIA,EAAA,YAAA,EACA,EAAA,OAAA,OAAA,GACA,MASA,OAJA,KAAA,iBAAA,CACA,KAAA,EAAA,KACA,IAAA,EAAA,KAEA,EAAA,MACA,IAAA,QACA,KAAA,sBAAA,oBACA,MACA,IAAA,SACA,KAAA,sBAAA,UACA,MACA,QACA,MAAA,IAAA,UAAA,qBAAA,EAAA,KACA,KAMA,IAAA,EAAA,UAAA,OAAA,GACA,mBAAA,UAAA,GACA,GAAA,EAAA,CACA,IAAA,EAAA,UAAA,GACA,OAAA,WAAA,WACA,IACA,QAAA,EAAA,oBACA,EAAA,kBAAA,aAEA,EAAA,2BACA,GAEA,IAAA,EAAA,QAAA,UAUA,OATA,EAAA,KAAA,WACA,IACA,QAAA,EAAA,oBACA,EAAA,kBAAA,aAGA,OAAA,WAAA,EAAA,wBAAA,KAAA,GAAA,QAGA,GAGA,OAAA,kBAAA,UAAA,qBACA,SAAA,GACA,IAAA,EAAA,KACA,EAAA,IAAA,YACA,EAAA,GACA,EAAA,EAAA,cAAA,EAAA,KACA,EAAA,EAAA,QACA,EAAA,EAAA,YAAA,EACA,cAAA,OAAA,EAyLA,OAxLA,KAAA,YAAA,EAAA,YAAA,EACA,mBAAA,OAAA,EACA,EAAA,QAAA,SAAA,EAAA,GACA,IACA,EADA,EAAA,WAAA,GACA,GAAA,OAAA,GAAA,MAAA,KACA,EAAA,EAAA,GACA,EAAA,MAAA,EAAA,GACA,EAAA,EAAA,aAAA,EAAA,GAEA,EAAA,EAAA,YAAA,EAAA,UAQA,GANA,EADA,EAAA,OACA,EAAA,GAAA,OAAA,GAEA,EAAA,qBAIA,gBAAA,GAAA,cAAA,EAAA,GAAA,CAQA,IAAA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,EAGA,EACA,EAWA,EAbA,EAAA,EAAA,mBAAA,GAGA,IACA,EAAA,EAAA,iBAAA,EACA,IACA,EAAA,EAAA,kBAAA,EACA,IACA,KAAA,UAEA,EACA,EAAA,2BAAA,GAKA,IAAA,EAAA,EAAA,YAAA,EAAA,WACA,IAAA,SAAA,GACA,OAAA,EAAA,eAAA,KAEA,OAAA,SAAA,GACA,MAAA,UAAA,EAAA,YACA,GACA,IACA,EAAA,EAAA,OAGA,IAAA,EAAA,EAAA,YAAA,EACA,sBAAA,GAAA,OAAA,EACA,EAAA,EAAA,YAAA,EAAA,gBACA,IAAA,SAAA,GACA,OAAA,EAAA,eAAA,KAEA,OAAA,SAAA,GACA,MAAA,MAAA,EAAA,YAEA,GAAA,UAAA,EAAA,MAAA,EAkEA,WAAA,EAAA,MAAA,IAEA,GADA,EAAA,EAAA,aAAA,IACA,YACA,EAAA,EAAA,aACA,EAAA,EAAA,cACA,EAAA,EAAA,UACA,EAAA,EAAA,YACA,EAAA,EAAA,uBACA,EAAA,EAAA,kBAEA,EAAA,aAAA,GAAA,uBACA,EACA,EAAA,aAAA,GAAA,mBACA,EACA,EAAA,aAAA,GAAA,MAAA,GAEA,GAAA,IAAA,EAAA,QACA,EAAA,oBAAA,GAEA,EAAA,aAAA,IAAA,IACA,EAAA,MAAA,EAAA,EACA,eACA,EAAA,MAAA,IAGA,EAAA,YAAA,EACA,aAAA,GAAA,aAAA,EACA,aAAA,GAAA,aAAA,IAEA,GACA,aAAA,GAAA,aAAA,SAMA,EAAA,aALA,EAAA,EAAA,MACA,EAAA,KAAA,CAAA,EAAA,IACA,EAAA,SAAA,SAnGA,CACA,IAkCA,EAlCA,EAAA,EAAA,aAAA,EAAA,EAAA,CACA,YAAA,EAAA,aAAA,GAAA,YACA,aAAA,EAAA,aAAA,GAAA,aACA,cAAA,EAAA,aAAA,GAAA,eACA,EAAA,4BAAA,EAAA,GA4BA,GA1BA,GACA,EAAA,aAAA,oBAAA,IAGA,EAAA,eAAA,gBAAA,IAIA,OAAA,EAAA,OAAA,OACA,SAAA,GACA,MAAA,QAAA,EAAA,OAGA,EAAA,CAAA,CACA,KAAA,MAAA,EAAA,EAAA,KAKA,GAFA,EAAA,IAAA,eAAA,EAAA,cAAA,IAEA,MACA,EAAA,KAAA,CAAA,EAAA,IAGA,EAAA,SAAA,GAGA,EAAA,aAAA,OAAA,GACA,EAAA,aAAA,GAAA,YAAA,QAAA,EAEA,UAAA,EACA,EAAA,EAAA,aAAA,GAAA,iBAAA,GACA,UAAA,IACA,EAAA,EAAA,aAAA,GAAA,iBAAA,IAEA,IACA,EAAA,IAAA,aAAA,EACA,EAAA,gBAIA,EAAA,aAAA,GAAA,CACA,YAAA,EAAA,YACA,aAAA,EAAA,aACA,cAAA,EAAA,cACA,kBAAA,EACA,mBAAA,EACA,UAAA,EACA,YAAA,EACA,KAAA,EACA,IAAA,EACA,MAAA,EACA,uBAAA,EACA,uBAAA,GAIA,EAAA,YAAA,EAAA,aAAA,IACA,EACA,aAAA,GAAA,aAAA,SAxHA,EAAA,aAAA,GAAA,CACA,IAAA,EACA,eAAA,KAgKA,KAAA,kBAAA,CACA,KAAA,EAAA,KACA,IAAA,EAAA,KAEA,EAAA,MACA,IAAA,QACA,KAAA,sBAAA,qBACA,MACA,IAAA,SACA,KAAA,sBAAA,UACA,MACA,QACA,MAAA,IAAA,UAAA,qBAAA,EAAA,KACA,KAiCA,OA/BA,EAAA,YAAA,SACA,EAAA,cAAA,KAAA,GACA,OAAA,WAAA,WACA,IAAA,EAAA,IAAA,MAAA,aACA,EAAA,OAAA,EACA,EAAA,cAAA,GACA,OAAA,EAAA,aACA,OAAA,WAAA,WACA,EAAA,YAAA,IACA,GAGA,EAAA,QAAA,SAAA,GACA,IAAA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,IAAA,MAAA,SACA,EAAA,MAAA,EACA,EAAA,SAAA,EACA,EAAA,QAAA,CAAA,GACA,EAAA,cAAA,GACA,OAAA,EAAA,SACA,OAAA,WAAA,WACA,EAAA,QAAA,IACA,MAGA,IAEA,UAAA,OAAA,GAAA,mBAAA,UAAA,IACA,OAAA,WAAA,UAAA,GAAA,GAEA,QAAA,WAGA,OAAA,kBAAA,UAAA,MAAA,WACA,KAAA,aAAA,QAAA,SAAA,GAMA,EAAA,cACA,EAAA,aAAA,OAEA,EAAA,eACA,EAAA,cAAA,OAEA,EAAA,WACA,EAAA,UAAA,OAEA,EAAA,aACA,EAAA,YAAA,SAIA,KAAA,sBAAA,WAIA,OAAA,kBAAA,UAAA,sBACA,SAAA,GACA,KAAA,eAAA,EACA,IAAA,EAAA,IAAA,MAAA,wBACA,KAAA,cAAA,GACA,OAAA,KAAA,wBACA,KAAA,uBAAA,IAKA,OAAA,kBAAA,UAAA,4BACA,WAEA,IAAA,EAAA,IAAA,MAAA,qBACA,KAAA,cAAA,GACA,OAAA,KAAA,qBACA,KAAA,oBAAA,IAKA,OAAA,kBAAA,UAAA,uBAAA,WACA,IACA,EACA,EAAA,CACA,IAAA,EACA,OAAA,EACA,WAAA,EACA,SAAA,EACA,UAAA,EACA,UAAA,EACA,OAAA,GAsBA,GApBA,KAAA,aAAA,QAAA,SAAA,GACA,EAAA,EAAA,aAAA,SACA,EAAA,EAAA,cAAA,WAGA,EAAA,WAAA,EAAA,UAEA,EAAA,MACA,EAAA,OAAA,EACA,EAAA,SACA,EAAA,WAAA,GAAA,EAAA,SAAA,EACA,EAAA,aACA,EAAA,aAAA,EACA,EAAA,eACA,EAAA,IAAA,EACA,EAAA,OACA,EAAA,UAAA,GAAA,EAAA,UAAA,KACA,EAAA,aAGA,IA/BA,KA+BA,mBAAA,CA/BA,KAgCA,mBAAA,EACA,IAAA,EAAA,IAAA,MAAA,4BACA,KAAA,cAAA,GACA,OAAA,KAAA,4BACA,KAAA,2BAAA,KAKA,OAAA,kBAAA,UAAA,YAAA,WACA,IAIA,EAJA,EAAA,KACA,GAAA,KAAA,cACA,MAAA,IAAA,MAAA,sDAGA,IAAA,UAAA,QAAA,mBAAA,UAAA,GACA,EAAA,UAAA,GACA,IAAA,UAAA,SACA,EAAA,UAAA,IAGA,IAAA,EAAA,GACA,EAAA,EACA,EAAA,EAOA,GALA,KAAA,aAAA,SACA,EAAA,KAAA,aAAA,GAAA,iBAAA,OACA,EAAA,KAAA,aAAA,GAAA,iBAAA,QAGA,EAAA,CAEA,GAAA,EAAA,WAAA,EAAA,SACA,MAAA,IAAA,UACA,6DAEA,IAAA,EAAA,sBACA,EAAA,EAAA,0BAEA,IAAA,EAAA,sBACA,EAAA,EAAA,qBAoBA,IAjBA,KAAA,aAAA,QAEA,KAAA,aAAA,GAAA,YAAA,QAAA,SAAA,GACA,EAAA,KAAA,CACA,KAAA,EAAA,KACA,MAAA,EACA,YAAA,UAAA,EAAA,KACA,EAAA,EAAA,EAAA,IAEA,UAAA,EAAA,KACA,IACA,UAAA,EAAA,MACA,MAKA,EAAA,GAAA,EAAA,GACA,EAAA,IACA,EAAA,KAAA,CACA,KAAA,QACA,aAAA,IAEA,KAEA,EAAA,IACA,EAAA,KAAA,CACA,KAAA,QACA,aAAA,IAEA,KAIA,IAAA,EAAA,EAAA,0BACA,EAAA,GACA,EAAA,QAAA,SAAA,EAAA,GAGA,IA0BA,EACA,EA3BA,EAAA,EAAA,MACA,EAAA,EAAA,KACA,EAAA,EAAA,qBAEA,EAAA,EAAA,aAAA,EAAA,EAAA,CACA,YAAA,EAAA,GAAA,YACA,aAAA,EAAA,GAAA,aACA,cAAA,EAAA,GAAA,eACA,EAAA,4BAAA,EAAA,GAEA,EAAA,aAAA,gBAAA,GAGA,EAAA,OAAA,EAAA,OAAA,OACA,SAAA,GACA,MAAA,QAAA,EAAA,OAEA,EAAA,OAAA,QAAA,SAAA,GAGA,SAAA,EAAA,WACA,IAAA,EAAA,WAAA,6BACA,EAAA,WAAA,2BAAA,OAQA,IAAA,EAAA,CAAA,CACA,KAAA,MAAA,EAAA,EAAA,KAEA,IACA,EAAA,IAAA,aAAA,EAAA,EAAA,gBAGA,EAAA,cACA,EAAA,IAAA,eAAA,EAAA,cAAA,IAGA,EAAA,GAAA,CACA,YAAA,EAAA,YACA,aAAA,EAAA,aACA,cAAA,EAAA,cACA,kBAAA,EACA,mBAAA,KACA,UAAA,EACA,YAAA,EACA,KAAA,EACA,IAAA,EACA,uBAAA,EACA,uBAAA,QAGA,KAAA,cACA,GAAA,kBAAA,EAAA,IAAA,SAAA,GACA,OAAA,EAAA,MACA,KAAA,KAAA,QAEA,EAAA,QAAA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,GACA,GAAA,EAAA,kBAAA,EACA,EAAA,kBAAA,QAAA,EAAA,aAAA,MAGA,KAAA,cAAA,EACA,IAAA,EAAA,IAAA,sBAAA,CACA,KAAA,QACA,IAAA,IAKA,OAHA,UAAA,QAAA,mBAAA,UAAA,IACA,OAAA,WAAA,UAAA,GAAA,EAAA,GAEA,QAAA,QAAA,IAGA,OAAA,kBAAA,UAAA,aAAA,WACA,IAAA,EAAA,KAEA,EAAA,EAAA,0BACA,KAAA,cACA,GAAA,kBAAA,KAAA,aAAA,IAAA,SAAA,GACA,OAAA,EAAA,MACA,KAAA,KAAA,QAEA,KAAA,aAAA,QAAA,SAAA,GACA,GAAA,EAAA,cACA,GAAA,+DAEA,EAAA,IAAA,WAHA,CAOA,IAAA,EAAA,EAAA,uBACA,EAAA,kBACA,EAAA,oBAEA,GAAA,EAAA,kBAAA,EAAA,EACA,SAAA,EAAA,aAAA,OAGA,IAAA,EAAA,IAAA,sBAAA,CACA,KAAA,SACA,IAAA,IAKA,OAHA,UAAA,QAAA,mBAAA,UAAA,IACA,OAAA,WAAA,UAAA,GAAA,EAAA,GAEA,QAAA,QAAA,IAGA,OAAA,kBAAA,UAAA,gBAAA,SAAA,GACA,GAAA,EAIA,CACA,IAAA,EAAA,EAAA,cACA,GAAA,EAAA,OACA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,aAAA,OAAA,IACA,GAAA,KAAA,aAAA,GAAA,MAAA,EAAA,OAAA,CACA,EAAA,EACA,MAIA,IAAA,EAAA,KAAA,aAAA,GACA,GAAA,EAAA,CACA,IAAA,EAAA,OAAA,KAAA,EAAA,WAAA,OAAA,EACA,EAAA,eAAA,EAAA,WAAA,GAEA,GAAA,QAAA,EAAA,WAAA,IAAA,EAAA,MAAA,IAAA,EAAA,MACA,OAGA,GAAA,MAAA,EAAA,UACA,OAGA,oBAAA,EAAA,OACA,EAAA,IAEA,EAAA,aAAA,mBAAA,GAGA,IAAA,EAAA,EAAA,cAAA,KAAA,kBAAA,KACA,EAAA,EAAA,KAAA,EAAA,KAAA,EAAA,UAAA,OACA,uBAAA,OACA,KAAA,kBAAA,IAAA,EAAA,KAAA,UAnCA,KAAA,aAAA,QAAA,SAAA,GACA,EAAA,aAAA,mBAAA,MAwCA,OAHA,UAAA,OAAA,GAAA,mBAAA,UAAA,IACA,OAAA,WAAA,UAAA,GAAA,GAEA,QAAA,WAGA,OAAA,kBAAA,UAAA,SAAA,WACA,IAAA,EAAA,GACA,KAAA,aAAA,QAAA,SAAA,GACA,CAAA,YAAA,cAAA,cAAA,eACA,iBAAA,QAAA,SAAA,GACA,EAAA,IACA,EAAA,KAAA,EAAA,GAAA,gBAIA,IAAA,EAAA,UAAA,OAAA,GAAA,mBAAA,UAAA,IACA,UAAA,GACA,OAAA,IAAA,QAAA,SAAA,GAEA,IAAA,EAAA,IAAA,IACA,QAAA,IAAA,GAAA,KAAA,SAAA,GACA,EAAA,QAAA,SAAA,GACA,OAAA,KAAA,GAAA,QAAA,SAAA,GACA,EAAA,IAAA,EAAA,EAAA,IACA,EAAA,GAAA,EAAA,OAGA,GACA,OAAA,WAAA,EAAA,EAAA,GAEA,EAAA,UAQA,OAAA,QAAA,CACA,mBAAA,EAAA,mBACA,iBAAA,QAAA;;AC7lCA,aAEA,IAAA,EAAA,QAAA,YAAA,IACA,EAAA,QAAA,YAAA,eAGA,OAAA,QAAA,WACA,IAAA,EAAA,SAAA,GACA,MAAA,CACA,KAAA,CACA,cAAA,kBACA,sBAAA,mBACA,EAAA,OAAA,EAAA,KACA,QAAA,CACA,6BAAA,wFAEA,EAAA,UAAA,EAAA,QACA,WAAA,EAAA,WACA,SAAA,WACA,OAAA,KAAA,MAAA,KAAA,SAAA,MAAA,KAAA,WAMA,EAAA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,SAAA,GACA,GAAA,iBAAA,GAAA,EAAA,QACA,OAAA,EAEA,IAAA,EAAA,GAqCA,OApCA,OAAA,KAAA,GAAA,QAAA,SAAA,GACA,GAAA,YAAA,GAAA,aAAA,GAAA,gBAAA,EAAA,CAGA,IAAA,EAAA,EAAA,GAAA,iBAAA,EAAA,GACA,EAAA,GAAA,CAAA,MAAA,EAAA,IAaA,QAZA,IAAA,EAAA,UACA,IAAA,EAAA,UAAA,IAAA,EAAA,OACA,EAAA,KAAA,QAEA,IAAA,EAAA,QACA,iBAAA,EAAA,MACA,EAAA,IAAA,EAAA,IAAA,EAAA,MAEA,EAAA,GAAA,EAAA,aAEA,EAAA,YAEA,IAAA,EAAA,MAAA,CACA,EAAA,SAAA,EAAA,UAAA,GACA,IAAA,EAAA,GACA,iBAAA,EAAA,MACA,EAAA,GAAA,CAAA,IAAA,EAAA,MAAA,IAAA,EAAA,OAEA,EAAA,GAAA,EAAA,MAEA,EAAA,SAAA,KAAA,UACA,EAAA,MACA,OAAA,KAAA,GAAA,eACA,EAAA,OAIA,EAAA,SACA,EAAA,QAAA,GAEA,GAaA,OAXA,EAAA,KAAA,MAAA,KAAA,UAAA,IACA,EAAA,QAAA,KACA,EAAA,SAAA,KAAA,UAAA,IACA,EAAA,QACA,EAAA,MAAA,EAAA,EAAA,QAEA,EAAA,QACA,EAAA,MAAA,EAAA,EAAA,QAEA,EAAA,SAAA,KAAA,UAAA,KAEA,UAAA,gBAAA,EAAA,EAAA,SAAA,GACA,EAAA,EAAA,OA6BA,GAjBA,UAAA,eACA,UAAA,aAAA,CAAA,aARA,SAAA,GACA,OAAA,IAAA,QAAA,SAAA,EAAA,GACA,EAAA,EAAA,EAAA,MAOA,iBAAA,aACA,oBAAA,eAGA,UAAA,aAAA,iBACA,UAAA,aAAA,kBAAA,WACA,OAAA,IAAA,QAAA,SAAA,GAKA,EAJA,CACA,CAAA,KAAA,aAAA,SAAA,UAAA,MAAA,GAAA,QAAA,IACA,CAAA,KAAA,aAAA,SAAA,UAAA,MAAA,GAAA,QAAA,SAMA,EAAA,QAAA,GAAA,CAEA,IAAA,EACA,UAAA,aAAA,iBAAA,KAAA,UAAA,cACA,UAAA,aAAA,iBAAA,WACA,OAAA,IAAA,UAAA,EAAA,SAAA,GACA,GAAA,kBAAA,EAAA,KACA,MAAA,GAEA,MAAA,KAIA,GAAA,EAAA,QAAA,GAAA,CACA,IAAA,EAAA,UAAA,aAAA,aACA,KAAA,UAAA,cACA,UAAA,aAAA,aAAA,SAAA,GACA,OAAA,EAAA,GAAA,KAAA,SAAA,GAEA,GAAA,EAAA,QAAA,EAAA,iBAAA,QACA,EAAA,QAAA,EAAA,iBAAA,OAIA,MAHA,EAAA,YAAA,QAAA,SAAA,GACA,EAAA,SAEA,IAAA,aAAA,oCACA,iBAEA,OAAA,GACA,SAAA,GACA,OAAA,QAAA,OAAA,EAAA,OAIA,UAAA,aAAA,SAAA,EAAA,EAAA,GACA,GAAA,EAAA,QAAA,GACA,OAAA,EAAA,EAAA,EAAA,GAGA,QAAA,KAAA,mFAEA,UAAA,aAAA,aAAA,GAAA,KAAA,EAAA;;ACtJA,aAEA,IAAA,EAAA,QAAA,YAAA,eAEA,EAAA,CACA,YAAA,WACA,iBAAA,SAAA,OAAA,mBAAA,YACA,OAAA,kBAAA,WACA,OAAA,eAAA,OAAA,kBAAA,UAAA,UAAA,CACA,IAAA,WACA,OAAA,KAAA,UAEA,IAAA,SAAA,GACA,KAAA,WACA,KAAA,oBAAA,QAAA,KAAA,UACA,KAAA,oBAAA,YAAA,KAAA,eAEA,KAAA,iBAAA,QAAA,KAAA,SAAA,GACA,KAAA,iBAAA,YAAA,KAAA,aAAA,SAAA,GACA,EAAA,OAAA,YAAA,QAAA,SAAA,GACA,IAAA,EAAA,IAAA,MAAA,SACA,EAAA,MAAA,EACA,EAAA,SAAA,CAAA,MAAA,GACA,EAAA,QAAA,CAAA,EAAA,QACA,KAAA,cAAA,IACA,KAAA,QACA,KAAA,WAMA,iBAAA,WAEA,iBAAA,UACA,OAAA,kBACA,cAAA,OAAA,iBAAA,WAEA,OAAA,eAAA,OAAA,iBAAA,UAAA,YAAA,CACA,IAAA,WACA,OAAA,KAAA,cAEA,IAAA,SAAA,GACA,KAAA,aAAA,OAOA,mBAAA,WACA,GAAA,iBAAA,SAAA,OAAA,mBACA,OAAA,sBADA,CAKA,OAAA,oBACA,OAAA,kBAAA,SAAA,EAAA,GACA,GAAA,EAAA,QAAA,IAGA,GAAA,EAAA,WAAA,CAEA,IADA,IAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,WAAA,OAAA,IAAA,CACA,IAAA,EAAA,EAAA,WAAA,GACA,GAAA,EAAA,eAAA,QACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,KAAA,OAAA,IAAA,CACA,IAAA,EAAA,CACA,IAAA,EAAA,KAAA,IAEA,IAAA,EAAA,KAAA,GAAA,QAAA,UACA,EAAA,SAAA,EAAA,SACA,EAAA,WAAA,EAAA,YAEA,EAAA,KAAA,QAGA,EAAA,KAAA,EAAA,WAAA,IAGA,EAAA,WAAA,EAGA,OAAA,IAAA,qBAAA,EAAA,IAEA,OAAA,kBAAA,UAAA,qBAAA,UAGA,qBAAA,qBACA,OAAA,eAAA,OAAA,kBAAA,sBAAA,CACA,IAAA,WACA,OAAA,qBAAA,uBAKA,OAAA,sBAAA,yBACA,OAAA,gBAAA,oBAIA,CAAA,sBAAA,uBAAA,mBACA,QAAA,SAAA,GACA,IAAA,EAAA,kBAAA,UAAA,GACA,kBAAA,UAAA,GAAA,WAGA,OAFA,UAAA,GAAA,IAAA,oBAAA,EACA,gBAAA,uBAAA,UAAA,IACA,EAAA,MAAA,KAAA,cAKA,IAAA,EACA,kBAAA,UAAA,gBAWA,GAVA,kBAAA,UAAA,gBAAA,WACA,OAAA,UAAA,GAMA,EAAA,MAAA,KAAA,YALA,UAAA,IACA,UAAA,GAAA,MAAA,MAEA,QAAA,YAKA,EAAA,QAAA,GAAA,CAEA,IASA,EAAA,kBAAA,UAAA,SACA,kBAAA,UAAA,SAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,MAAA,KAAA,CAAA,GAAA,OACA,KAAA,SAAA,GACA,OAbA,SAAA,GACA,IAAA,EAAA,IAAA,IAKA,OAJA,OAAA,KAAA,GAAA,QAAA,SAAA,GACA,EAAA,IAAA,EAAA,EAAA,IACA,EAAA,GAAA,EAAA,KAEA,EAOA,CAAA,KAEA,KAAA,EAAA,QAOA,OAAA,QAAA,CACA,YAAA,EAAA,YACA,iBAAA,EAAA,iBACA,mBAAA,EAAA,mBACA,iBAAA,QAAA;;ACzJA,aACA,IAAA,EAAA,CAQA,iBAAA,WACA,UAAA,aAAA,UAAA,qBAKA,OAAA,QAAA,CACA,iBAAA,EAAA;;ACdA,cAGA,WAEA,IAAA,EAAA,QAAA,WAAA,IACA,EAAA,QAAA,WAAA,eAEA,OAAA,QAAA,eAAA,EACA,OAAA,QAAA,eAAA,QAAA,WAAA,eACA,OAAA,QAAA,WAAA,QAAA,WAAA,WASA,IAAA,EAAA,QAAA,yBAAA,KACA,EAAA,QAAA,qBAAA,KACA,EAAA,QAAA,2BAAA,KACA,EAAA,QAAA,yBAAA,KAGA,OAAA,EAAA,SACA,IAAA,QACA,IAAA,SACA,IAAA,IAAA,EAAA,mBAEA,YADA,EAAA,wDAGA,EAAA,+BAEA,OAAA,QAAA,YAAA,EAEA,EAAA,mBACA,EAAA,kBACA,EAAA,mBACA,EAAA,qBACA,EAAA,cACA,MACA,IAAA,UACA,IAAA,IAAA,EAAA,mBAEA,YADA,EAAA,yDAGA,EAAA,gCAEA,OAAA,QAAA,YAAA,EAEA,EAAA,mBACA,EAAA,mBACA,EAAA,qBACA,EAAA,cACA,MACA,IAAA,OACA,IAAA,IAAA,EAAA,mBAEA,YADA,EAAA,yDAGA,EAAA,6BAEA,OAAA,QAAA,YAAA,EAEA,EAAA,mBACA,EAAA,qBACA,MACA,IAAA,SACA,IAAA,EAEA,YADA,EAAA,wDAGA,EAAA,+BAEA,OAAA,QAAA,YAAA,EAEA,EAAA,mBACA,MACA,QACA,EAAA,yBA7EA;;ACXA,IAAA,EAAA,QAAA,kBAEA,OAAA,QAAA,SAAA,EAAA,GACA,IAAA,EACA,EAAA,IAAA,UAAA,OAGA,EAAA,wBAWA,OANA,IACA,EAAA,EACA,EATA,CAAA,OAAA,EAAA,OAAA,IAaA,oBAAA,WAAA,UAAA,aAYA,EAAA,OAAA,EAAA,WAUA,UAAA,aAAA,aAAA,GACA,KAAA,SAAA,GACA,EAAA,KAAA,KACA,MAAA,SAAA,GACA,IAAA,EAIA,iBAAA,GACA,EAAA,IAAA,MAAA,qBAEA,KADA,IAAA,GA1CA,sBA0CA,EACA,EA1CA,+BAiDA,EAAA,GACA,OAIA,EAAA,GACA,EAAA,KAAA,EAEA,EAAA,KAzDA,+BA8DA,EAAA,OAxCA,EAAA,IAAA,MAAA,qBACA,KAAA,wBAGA,WAAA,WACA,EAAA,IACA,MAjBA,EAAA,IAAA,MAAA,qBACA,KAAA,oBAGA,WAAA,WACA,EAAA,IACA;;ACLeA,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,SAAAA,QAAAA,UAAAA,QAAAA,IAAAA,QAAAA,QAAAA,QAAAA,WAAAA,EAhBR,IAAMC,EAAW,CAAC,EAAE,GAAI,GAAI,EAAE,EAAG,GAAI,CAAC,GAAI,IAgBlCD,QAAAA,SAAAA,EAdR,IAAME,EAAQD,EAASE,OAcfH,QAAAA,MAAAA,EAbR,IAAMI,EAAM,EAaJJ,QAAAA,IAAAA,EAFR,IAAMA,EAAYC,EAASI,OAEnBL,QAAAA,UAAAA,EAAAA,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;ACbAM,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,MAAAA,QAAAA,aAAAA,EAFR,MAAMA,EAASC,GAAMC,MAAMD,GAAGE,OAEtBH,QAAAA,MAAAA,EAAAA,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;ACWAI,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,OAAAA,QAAAA,aAAAA,EApBf,MAAMC,EAAIH,MAAMI,UAAUF,OAgBbA,EAAS,CAACG,EAAGC,EAAGC,SAEfC,IAARD,EAAoBJ,EAAEM,KAAKH,EAAGD,GAAKF,EAAEM,KAAKH,EAAGD,EAAGE,GAEvCL,QAAAA,OAAAA,EAAAA,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;ACIAQ,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,IAAAA,QAAAA,aAAAA,EAxBf,IAAA,EAAA,QAAA,YAiBO,MAAMA,EAAM,CAACL,EAAGC,EAAGC,EAAM,MAAO,EAAO,EAAA,QAAA,CAACA,EAAKI,EAAGC,KAC/CL,EAAIK,GAAKP,EAAEM,EAAGC,EAAGN,EAAGC,GAEbA,GAEXD,EAAIC,GAAOD,GAEAI,QAAAA,IAAAA,EAAAA,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;ACRAG,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,KAAAA,QAAAA,aAAAA,EAhBf,MAAMC,EAAId,MAAMI,UAAUW,QAUbF,EAAO,CAACR,EAAGC,KACpBQ,EAAEL,KAAKH,EAAGD,GAEHC,GAGIO,QAAAA,KAAAA,EAAAA,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;ACWAG,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,UAAAA,QAAAA,QAAAA,QAAAA,KAAAA,QAAAA,aAAAA,EAjBR,MAAMC,EAAY,CAACL,EAAGM,KAAQN,EAAEM,EAAGA,GAAGA,EAiB9BF,QAAAA,UAAAA,EAJR,MAAMG,EAAU,CAACP,EAAGN,IAAMA,EAAEW,EAAUL,EAAGN,EAAEX,SAInCqB,QAAAA,QAAAA,EAFR,MAAMA,EAAO,CAAEI,MAAOH,EAAWI,IAAKF,GAE9BH,QAAAA,KAAAA,EAAAA,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;AC3BfM,OAAOC,QAAQ;;ACAfD,OAAOC,QAAQ;;ACAfD,OAAOC,QAAQ;;ACAfD,OAAOC,QAAQ;;ACAfD,OAAOC,QAAQ;;AC6Mf,aA5MA,IAAA,EAAA,EAAA,QAAA,SACA,EAAA,EAAA,QAAA,iBACA,EAAA,QAAA,iCACA,EAAA,EAAA,QAAA,8BACA,EAAA,EAAA,QAAA,4BACA,EAAA,EAAA,QAAA,6BACA,EAAA,QAAA,kCAEA,EAAA,EAAA,QAAA,uDACA,EAAA,EAAA,QAAA,uBACA,EAAA,EAAA,QAAA,qBACA,EAAA,EAAA,QAAA,sBACA,EAAA,EAAA,QAAA,qBAgMA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,WAAA,MAAA,EAAA,cAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA9LA,IAAMC,EAASC,SAASC,cAAc,UAChCC,EAAQF,SAASC,cAAc,SAE/BE,GAAO,EAAQJ,EAAAA,SAAAA,GAGfK,GAAW,EAAI,EAAA,SAAA,WAAMD,OAAAA,EAAKE,YAAW,EAAM,EAAA,SAAA,GAAI,GAC/CC,GAAa,EAAI,EAAA,SAAA,SAACC,GAAMJ,OAAAA,EAAKK,YAAY,CAAEC,MAAOF,KAAMH,GAGxDM,GAAW,EAAI,EAAA,SAAA,WAAMP,OAAAA,EAAKE,YAAW,EAAM,EAAA,SAAA,GAAI,GAC/CM,GAAa,EAAI,EAAA,SAAA,SAACJ,GAAMJ,OAAAA,EAAKK,YAAY,CAAEC,MAAOF,KAAMG,GACxDE,EAAST,EAAKK,cAGdK,GAAc,EAAI,EAAA,SAAA,WAAMV,OAAAA,EAAKK,gBAAe,EAAM,EAAA,SAAA,GAAI,GAEtDM,EAAeR,GAAAA,OAAAA,EAAAA,GAAeK,EAAAA,GAAYC,CAAAA,GAAWC,EAAAA,IAE3DX,EAAMa,UAAW,EAEjB,IAAMC,EAAU,EAAE,GAAI,EAAG,EAAG,GACtBC,EAAW,CAAC,EAAG,EAAG,EAAG,GAErBC,EAAQC,KAAKC,YAAc,CAC7BC,YAAa,CAAEC,KAAMpB,EAAOqB,OAAO,GACnCC,UAAW,CACPC,KAAM,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,IAQnBC,QAAQ,EAAI,EAAA,SAAA,SAACxC,EAAGL,GAAO,MAAA,CAAE8C,KAAM9C,IAAMyB,IAEzCsB,KAAM,CAEFC,OAAQ,EACRC,OAAQ,IAAMC,MAAO,GAAIf,QAAAA,EAASC,SAAAA,GAEtCe,SAAU,CACNP,KAAM,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,IAQnBC,QAAQ,EAAI,EAAA,SAAA,SAACxC,EAAGL,GAAO,MAAA,CAAE8C,KAAM9C,IAAMyB,IAEzC2B,MAAO,CAAEC,KAAM,KACfC,KAAM,CAAEnB,QAAAA,EAASC,SAAAA,IAGfmB,EAAY,CAAE3B,MAAO,CAAC,EAAG,EAAG,EAAG,GAAI4B,MAAO,EAAGC,QAAS,GACtDC,GAAa,EAAI,EAAA,SAAA,SAAC3D,GAAYwD,OAAAA,EAAAA,EAAAA,GAAAA,GAAb,GAAA,CAAwB5B,YAAa5B,KAAM0B,GAC5DkC,GAAa,EAAI,EAAA,SAAA,SAAC5D,GAAYwD,OAAAA,EAAAA,EAAAA,GAAAA,GAAb,GAAA,CAAwB5B,YAAa5B,KAAM+B,GAC5D8B,EAAiBL,EAAAA,EAAAA,GAAAA,GAAR,GAAA,CAAmB5B,YAAaI,IACzC8B,GAAc,EAAI,EAAA,SAAA,SAAC9D,GAAYwD,OAAAA,EAAAA,EAAAA,GAAAA,GAAb,GAAA,CAAwB5B,YAAa5B,KAAMiC,GAEnE,SAAS8B,EAAMC,GACXzC,EAAKwC,MAAMP,GACXjC,EAAKwC,OAAM,EAAQC,EAAAA,SAAAA,EAAMJ,IACzBrC,EAAKwC,MAAMF,GACXtC,EAAKwC,OAAM,EAAQC,EAAAA,SAAAA,EAAMF,IAG7B,IAAMG,EAAa1C,EAAK,CAAE2C,KAAAA,EAAF,QAAQC,WAAY,CAAEC,SAAUjF,EAAAA,WAAaE,MAAAA,EAAAA,QAG/DgF,EAAW9C,EAAK,CAClB+C,KAAMC,EADY,QAElBC,SAAU,CAENC,MAAO,SAAC9C,EAAD,GAAa3B,IAAAA,EAAPyE,EAAAA,MAAgBxE,EAAN8C,EAAAA,KAAe/C,OAAAA,IAAK,EAAQC,EAAAA,SAAAA,EAAE,EAAGyB,IAExDqB,KAAM,SAACpB,EAAD,GAA0BkB,OAApBA,EAAAA,KAAME,EAAAA,OAClB2B,OAAQnD,EAAKoD,KAAK,UAClBC,MAAOrD,EAAKsD,QAAQ,sBACpBC,OAAQvD,EAAKsD,QAAQ,wBAGzBjD,YAAa,SAACD,EAAD,GAAMoD,IAAAA,EAAAA,EAAAA,GAAU9E,EAAN8C,EAAAA,KAAegC,OAAAA,IAAM,EAAQ9E,EAAAA,SAAAA,EAAGyB,MAI3D,SAASsD,EAAcC,GAEZZ,OAAAA,GAAS,EAAI,EAAA,SAAA,SAACpE,GAAMiF,OAAAA,OAAOC,OAAOlF,EAAGgF,EAAMhF,IAAIgF,EAAKnC,OAAQ,IAIvE,SAASsC,EAAcpB,GACEqB,IAAAA,EAAoB/C,EAAjCG,YAA2B6C,EAAMhD,EAAjBM,UAMjBoC,OAJFzD,EAAAA,EAAAA,SAAAA,EAAKwC,MAAOJ,GACjBnC,EAAS,GAAG6D,GACZC,EAAExC,OAAO,GAAGiC,IAAK,EAAQf,EAAAA,SAAAA,EAAMjC,GAExBiD,EAAcM,GAKzB,IAAMC,EAAWhE,EAAK,CAClB+C,KAAM,gDAAgDkB,EADpC,QAElBhB,SAAU,CACNiB,KAAM,SAAA,GAASC,IAAAA,EAAN1B,EAAAA,KAAc,OAAA,EAAQ0B,EAAAA,SAAAA,EAAG5D,IAClC6D,KAAM,SAAA,GAASD,IAAAA,EAAN1B,EAAAA,KAAc,OAAA,EAAQ0B,EAAAA,SAAAA,EAAE,EAAG5D,IACpCmB,OAAQ1B,EAAKoD,KAAK,UAClBzB,OAAQ3B,EAAKoD,KAAK,UAClBxB,MAAO5B,EAAKoD,KAAK,SACjBvC,QAASb,EAAKoD,KAAK,WACnBtC,SAAUd,EAAKoD,KAAK,aAExB/C,YAAaI,IAGX4D,EAAgB,WAAML,OAAAA,EAASjD,EAAMU,OAG3C,SAAS6C,EAAa7B,GACZsB,IAAAA,EAAIhD,EAAMc,SACV0C,EAAKR,EAAExC,OAKNkC,OAHFzD,EAAAA,EAAAA,SAAAA,EAAKwC,MAAOJ,GACjBmC,EAAG,GAAGrB,OAAQ,EAAQT,EAAAA,SAAAA,EAAK,EAAG/B,GAEvB+C,EAAcM,GAIzB,IAAMS,EAAYxE,EAAK,CACnB+C,KAAM0B,EADa,QAEnBxB,SAAU,CACNiB,KAAMzD,EAEN2D,MAAM,EAAQ,EAAA,UAAC,EAAGjE,GAClB4B,KAAM/B,EAAKoD,KAAK,SAEpB/C,YAAa,SAAA,GAAS8D,IAAAA,EAAN1B,EAAAA,KAAc,OAAA,EAAQ0B,EAAAA,SAAAA,EAAGzD,MAGvCgE,EAAiB,WAAMF,OAAAA,EAAUzD,EAAMe,QAEvC6C,EAAW3E,EAAK,CAClB+C,KAAM6B,EADY,QAElB3B,SAAU,CACNC,MAAO,SAAA,GAASiB,IAAAA,EAAN1B,EAAAA,KAAc,OAAA,EAAQ0B,EAAAA,SAAAA,EAAGzD,IACnCG,QAASb,EAAKoD,KAAK,WACnBtC,SAAUd,EAAKoD,KAAK,eAItByB,EAAgB,WAAMF,OAAAA,EAAS5D,EAAMiB,OAE3C,SAAS8C,EAAUrC,GAEfoB,EAAcpB,GAEd4B,IAEAC,EAAa7B,GAEbiC,IAEAG,IAGJ,SAASE,EAAkB,GAALZ,IAAAA,EAAN1B,EAAAA,KACZD,EAAM2B,GACNW,EAAUX,GAGdpE,EAAMiF,iBAAiB,UAAW,WACVC,IAAAA,EAAsBlF,EAAlCmF,WAA4BC,EAAMpF,EAAnBqF,YAEvBxF,EAAOyD,MAAQ4B,EACfrF,EAAO2D,OAAS4B,GACX,EAAA,EAAA,SAAA,SAACpG,GAAMA,OAAAA,EAAEsG,OAAOJ,EAAGlF,EAAMqF,cAAczE,GAE5CI,EAAMU,KAAKC,QAAU4D,KAAKC,IAAIN,EAAGE,EAAG,KACpCpF,EAAMyF,OAENxF,EAAKkD,MAAM,WAAMR,OAAAA,EAAWqC,QAGhC,EAAa,EAAA,SAAA,CAAEhF,OAAO,GAAQ,SAACb,EAAGuG,GAC3BvG,EAAKwG,QAAQC,KAAKzG,GACb,cAAea,EAASA,EAAM6F,UAAYH,EAC3C1F,EAAM8F,IAAM7E,KAAK8E,IAAIC,gBAAgBN","file":"demo.cac6a45b.js","sourceRoot":"../demo","sourcesContent":["/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar logDisabled_ = true;\n\n// Utility methods.\nvar utils = {\n  disableLog: function(bool) {\n    if (typeof bool !== 'boolean') {\n      return new Error('Argument type: ' + typeof bool +\n          '. Please use a boolean.');\n    }\n    logDisabled_ = bool;\n    return (bool) ? 'adapter.js logging disabled' :\n        'adapter.js logging enabled';\n  },\n\n  log: function() {\n    if (typeof window === 'object') {\n      if (logDisabled_) {\n        return;\n      }\n      if (typeof console !== 'undefined' && typeof console.log === 'function') {\n        console.log.apply(console, arguments);\n      }\n    }\n  },\n\n  /**\n   * Extract browser version out of the provided user agent string.\n   *\n   * @param {!string} uastring userAgent string.\n   * @param {!string} expr Regular expression used as match criteria.\n   * @param {!number} pos position in the version string to be returned.\n   * @return {!number} browser version.\n   */\n  extractVersion: function(uastring, expr, pos) {\n    var match = uastring.match(expr);\n    return match && match.length >= pos && parseInt(match[pos], 10);\n  },\n\n  /**\n   * Browser detector.\n   *\n   * @return {object} result containing browser and version\n   *     properties.\n   */\n  detectBrowser: function() {\n    // Returned result object.\n    var result = {};\n    result.browser = null;\n    result.version = null;\n\n    // Fail early if it's not a browser\n    if (typeof window === 'undefined' || !window.navigator) {\n      result.browser = 'Not a browser.';\n      return result;\n    }\n\n    // Firefox.\n    if (navigator.mozGetUserMedia) {\n      result.browser = 'firefox';\n      result.version = this.extractVersion(navigator.userAgent,\n          /Firefox\\/([0-9]+)\\./, 1);\n\n    // all webkit-based browsers\n    } else if (navigator.webkitGetUserMedia) {\n      // Chrome, Chromium, Webview, Opera, all use the chrome shim for now\n      if (window.webkitRTCPeerConnection) {\n        result.browser = 'chrome';\n        result.version = this.extractVersion(navigator.userAgent,\n          /Chrom(e|ium)\\/([0-9]+)\\./, 2);\n\n      // Safari or unknown webkit-based\n      // for the time being Safari has support for MediaStreams but not webRTC\n      } else {\n        // Safari UA substrings of interest for reference:\n        // - webkit version:           AppleWebKit/602.1.25 (also used in Op,Cr)\n        // - safari UI version:        Version/9.0.3 (unique to Safari)\n        // - safari UI webkit version: Safari/601.4.4 (also used in Op,Cr)\n        //\n        // if the webkit version and safari UI webkit versions are equals,\n        // ... this is a stable version.\n        //\n        // only the internal webkit version is important today to know if\n        // media streams are supported\n        //\n        if (navigator.userAgent.match(/Version\\/(\\d+).(\\d+)/)) {\n          result.browser = 'safari';\n          result.version = this.extractVersion(navigator.userAgent,\n            /AppleWebKit\\/([0-9]+)\\./, 1);\n\n        // unknown webkit-based browser\n        } else {\n          result.browser = 'Unsupported webkit-based browser ' +\n              'with GUM support but no WebRTC support.';\n          return result;\n        }\n      }\n\n    // Edge.\n    } else if (navigator.mediaDevices &&\n        navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) {\n      result.browser = 'edge';\n      result.version = this.extractVersion(navigator.userAgent,\n          /Edge\\/(\\d+).(\\d+)$/, 2);\n\n    // Default fallthrough: not supported.\n    } else {\n      result.browser = 'Not a supported browser.';\n      return result;\n    }\n\n    return result;\n  }\n};\n\n// Export.\nmodule.exports = {\n  log: utils.log,\n  disableLog: utils.disableLog,\n  browserDetails: utils.detectBrowser(),\n  extractVersion: utils.extractVersion\n};\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\nvar logging = require('../utils.js').log;\n\n// Expose public methods.\nmodule.exports = function() {\n  var constraintsToChrome_ = function(c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    var cc = {};\n    Object.keys(c).forEach(function(key) {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      var r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      var oldname_ = function(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return (name === 'deviceId') ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        var oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(function(mix) {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  var shimConstraints_ = function(constraints, func) {\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (constraints && constraints.audio) {\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n    if (constraints && typeof constraints.video === 'object') {\n      // Shim facingMode for mobile, where it defaults to \"user\".\n      var face = constraints.video.facingMode;\n      face = face && ((typeof face === 'object') ? face : {ideal: face});\n\n      if ((face && (face.exact === 'user' || face.exact === 'environment' ||\n                    face.ideal === 'user' || face.ideal === 'environment')) &&\n          !(navigator.mediaDevices.getSupportedConstraints &&\n            navigator.mediaDevices.getSupportedConstraints().facingMode)) {\n        delete constraints.video.facingMode;\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          // Look for \"back\" in label, or use last cam (typically back cam).\n          return navigator.mediaDevices.enumerateDevices()\n          .then(function(devices) {\n            devices = devices.filter(function(d) {\n              return d.kind === 'videoinput';\n            });\n            var back = devices.find(function(d) {\n              return d.label.toLowerCase().indexOf('back') !== -1;\n            }) || (devices.length && devices[devices.length - 1]);\n            if (back) {\n              constraints.video.deviceId = face.exact ? {exact: back.deviceId} :\n                                                        {ideal: back.deviceId};\n            }\n            constraints.video = constraintsToChrome_(constraints.video);\n            logging('chrome: ' + JSON.stringify(constraints));\n            return func(constraints);\n          });\n        }\n      }\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n\n  var shimError_ = function(e) {\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraintName,\n      toString: function() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  var getUserMedia_ = function(constraints, onSuccess, onError) {\n    shimConstraints_(constraints, function(c) {\n      navigator.webkitGetUserMedia(c, onSuccess, function(e) {\n        onError(shimError_(e));\n      });\n    });\n  };\n\n  navigator.getUserMedia = getUserMedia_;\n\n  // Returns the result of getUserMedia as a Promise.\n  var getUserMediaPromise_ = function(constraints) {\n    return new Promise(function(resolve, reject) {\n      navigator.getUserMedia(constraints, resolve, reject);\n    });\n  };\n\n  if (!navigator.mediaDevices) {\n    navigator.mediaDevices = {\n      getUserMedia: getUserMediaPromise_,\n      enumerateDevices: function() {\n        return new Promise(function(resolve) {\n          var kinds = {audio: 'audioinput', video: 'videoinput'};\n          return MediaStreamTrack.getSources(function(devices) {\n            resolve(devices.map(function(device) {\n              return {label: device.label,\n                      kind: kinds[device.kind],\n                      deviceId: device.id,\n                      groupId: ''};\n            }));\n          });\n        });\n      }\n    };\n  }\n\n  // A shim for getUserMedia method on the mediaDevices object.\n  // TODO(KaptenJansson) remove once implemented in Chrome stable.\n  if (!navigator.mediaDevices.getUserMedia) {\n    navigator.mediaDevices.getUserMedia = function(constraints) {\n      return getUserMediaPromise_(constraints);\n    };\n  } else {\n    // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n    // function which returns a Promise, it does not accept spec-style\n    // constraints.\n    var origGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(cs) {\n      return shimConstraints_(cs, function(c) {\n        return origGetUserMedia(c).then(function(stream) {\n          if (c.audio && !stream.getAudioTracks().length ||\n              c.video && !stream.getVideoTracks().length) {\n            stream.getTracks().forEach(function(track) {\n              track.stop();\n            });\n            throw new DOMException('', 'NotFoundError');\n          }\n          return stream;\n        }, function(e) {\n          return Promise.reject(shimError_(e));\n        });\n      });\n    };\n  }\n\n  // Dummy devicechange event methods.\n  // TODO(KaptenJansson) remove once implemented in Chrome stable.\n  if (typeof navigator.mediaDevices.addEventListener === 'undefined') {\n    navigator.mediaDevices.addEventListener = function() {\n      logging('Dummy mediaDevices.addEventListener called.');\n    };\n  }\n  if (typeof navigator.mediaDevices.removeEventListener === 'undefined') {\n    navigator.mediaDevices.removeEventListener = function() {\n      logging('Dummy mediaDevices.removeEventListener called.');\n    };\n  }\n};\n","\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\nvar logging = require('../utils.js').log;\nvar browserDetails = require('../utils.js').browserDetails;\n\nvar chromeShim = {\n  shimMediaStream: function() {\n    window.MediaStream = window.MediaStream || window.webkitMediaStream;\n  },\n\n  shimOnTrack: function() {\n    if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n        window.RTCPeerConnection.prototype)) {\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n        get: function() {\n          return this._ontrack;\n        },\n        set: function(f) {\n          var self = this;\n          if (this._ontrack) {\n            this.removeEventListener('track', this._ontrack);\n            this.removeEventListener('addstream', this._ontrackpoly);\n          }\n          this.addEventListener('track', this._ontrack = f);\n          this.addEventListener('addstream', this._ontrackpoly = function(e) {\n            // onaddstream does not fire when a track is added to an existing\n            // stream. But stream.onaddtrack is implemented so we use that.\n            e.stream.addEventListener('addtrack', function(te) {\n              var event = new Event('track');\n              event.track = te.track;\n              event.receiver = {track: te.track};\n              event.streams = [e.stream];\n              self.dispatchEvent(event);\n            });\n            e.stream.getTracks().forEach(function(track) {\n              var event = new Event('track');\n              event.track = track;\n              event.receiver = {track: track};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            }.bind(this));\n          }.bind(this));\n        }\n      });\n    }\n  },\n\n  shimSourceObject: function() {\n    if (typeof window === 'object') {\n      if (window.HTMLMediaElement &&\n        !('srcObject' in window.HTMLMediaElement.prototype)) {\n        // Shim the srcObject property, once, when HTMLMediaElement is found.\n        Object.defineProperty(window.HTMLMediaElement.prototype, 'srcObject', {\n          get: function() {\n            return this._srcObject;\n          },\n          set: function(stream) {\n            var self = this;\n            // Use _srcObject as a private property for this shim\n            this._srcObject = stream;\n            if (this.src) {\n              URL.revokeObjectURL(this.src);\n            }\n\n            if (!stream) {\n              this.src = '';\n              return;\n            }\n            this.src = URL.createObjectURL(stream);\n            // We need to recreate the blob url when a track is added or\n            // removed. Doing it manually since we want to avoid a recursion.\n            stream.addEventListener('addtrack', function() {\n              if (self.src) {\n                URL.revokeObjectURL(self.src);\n              }\n              self.src = URL.createObjectURL(stream);\n            });\n            stream.addEventListener('removetrack', function() {\n              if (self.src) {\n                URL.revokeObjectURL(self.src);\n              }\n              self.src = URL.createObjectURL(stream);\n            });\n          }\n        });\n      }\n    }\n  },\n\n  shimPeerConnection: function() {\n    // The RTCPeerConnection object.\n    window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n      // Translate iceTransportPolicy to iceTransports,\n      // see https://code.google.com/p/webrtc/issues/detail?id=4869\n      logging('PeerConnection');\n      if (pcConfig && pcConfig.iceTransportPolicy) {\n        pcConfig.iceTransports = pcConfig.iceTransportPolicy;\n      }\n\n      var pc = new webkitRTCPeerConnection(pcConfig, pcConstraints);\n      var origGetStats = pc.getStats.bind(pc);\n      pc.getStats = function(selector, successCallback, errorCallback) {\n        var self = this;\n        var args = arguments;\n\n        // If selector is a function then we are in the old style stats so just\n        // pass back the original getStats format to avoid breaking old users.\n        if (arguments.length > 0 && typeof selector === 'function') {\n          return origGetStats(selector, successCallback);\n        }\n\n        var fixChromeStats_ = function(response) {\n          var standardReport = {};\n          var reports = response.result();\n          reports.forEach(function(report) {\n            var standardStats = {\n              id: report.id,\n              timestamp: report.timestamp,\n              type: report.type\n            };\n            report.names().forEach(function(name) {\n              standardStats[name] = report.stat(name);\n            });\n            standardReport[standardStats.id] = standardStats;\n          });\n\n          return standardReport;\n        };\n\n        // shim getStats with maplike support\n        var makeMapStats = function(stats, legacyStats) {\n          var map = new Map(Object.keys(stats).map(function(key) {\n            return[key, stats[key]];\n          }));\n          legacyStats = legacyStats || stats;\n          Object.keys(legacyStats).forEach(function(key) {\n            map[key] = legacyStats[key];\n          });\n          return map;\n        };\n\n        if (arguments.length >= 2) {\n          var successCallbackWrapper_ = function(response) {\n            args[1](makeMapStats(fixChromeStats_(response)));\n          };\n\n          return origGetStats.apply(this, [successCallbackWrapper_,\n              arguments[0]]);\n        }\n\n        // promise-support\n        return new Promise(function(resolve, reject) {\n          if (args.length === 1 && typeof selector === 'object') {\n            origGetStats.apply(self, [\n              function(response) {\n                resolve(makeMapStats(fixChromeStats_(response)));\n              }, reject]);\n          } else {\n            // Preserve legacy chrome stats only on legacy access of stats obj\n            origGetStats.apply(self, [\n              function(response) {\n                resolve(makeMapStats(fixChromeStats_(response),\n                    response.result()));\n              }, reject]);\n          }\n        }).then(successCallback, errorCallback);\n      };\n\n      return pc;\n    };\n    window.RTCPeerConnection.prototype = webkitRTCPeerConnection.prototype;\n\n    // wrap static methods. Currently just generateCertificate.\n    if (webkitRTCPeerConnection.generateCertificate) {\n      Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n        get: function() {\n          return webkitRTCPeerConnection.generateCertificate;\n        }\n      });\n    }\n\n    ['createOffer', 'createAnswer'].forEach(function(method) {\n      var nativeMethod = webkitRTCPeerConnection.prototype[method];\n      webkitRTCPeerConnection.prototype[method] = function() {\n        var self = this;\n        if (arguments.length < 1 || (arguments.length === 1 &&\n            typeof arguments[0] === 'object')) {\n          var opts = arguments.length === 1 ? arguments[0] : undefined;\n          return new Promise(function(resolve, reject) {\n            nativeMethod.apply(self, [resolve, reject, opts]);\n          });\n        }\n        return nativeMethod.apply(this, arguments);\n      };\n    });\n\n    // add promise support -- natively available in Chrome 51\n    if (browserDetails.version < 51) {\n      ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n          .forEach(function(method) {\n            var nativeMethod = webkitRTCPeerConnection.prototype[method];\n            webkitRTCPeerConnection.prototype[method] = function() {\n              var args = arguments;\n              var self = this;\n              var promise = new Promise(function(resolve, reject) {\n                nativeMethod.apply(self, [args[0], resolve, reject]);\n              });\n              if (args.length < 2) {\n                return promise;\n              }\n              return promise.then(function() {\n                args[1].apply(null, []);\n              },\n              function(err) {\n                if (args.length >= 3) {\n                  args[2].apply(null, [err]);\n                }\n              });\n            };\n          });\n    }\n\n    // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          var nativeMethod = webkitRTCPeerConnection.prototype[method];\n          webkitRTCPeerConnection.prototype[method] = function() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                RTCIceCandidate : RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          };\n        });\n\n    // support for addIceCandidate(null or undefined)\n    var nativeAddIceCandidate =\n        RTCPeerConnection.prototype.addIceCandidate;\n    RTCPeerConnection.prototype.addIceCandidate = function() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n  }\n};\n\n\n// Expose public methods.\nmodule.exports = {\n  shimMediaStream: chromeShim.shimMediaStream,\n  shimOnTrack: chromeShim.shimOnTrack,\n  shimSourceObject: chromeShim.shimSourceObject,\n  shimPeerConnection: chromeShim.shimPeerConnection,\n  shimGetUserMedia: require('./getusermedia')\n};\n"," /* eslint-env node */\n'use strict';\n\n// SDP helpers.\nvar SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substr(2, 10);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(function(line) {\n    return line.trim();\n  });\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  var parts = blob.split('\\nm=');\n  return parts.map(function(part, index) {\n    return (index > 0 ? 'm=' + part : part).trim() + '\\r\\n';\n  });\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(function(line) {\n    return line.indexOf(prefix) === 0;\n  });\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\nSDPUtils.parseCandidate = function(line) {\n  var parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  var candidate = {\n    foundation: parts[0],\n    component: parts[1],\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7]\n  };\n\n  for (var i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag\n        candidate[parts[i]] = parts[i + 1];\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\nSDPUtils.writeCandidate = function(candidate) {\n  var sdp = [];\n  sdp.push(candidate.foundation);\n  sdp.push(candidate.component);\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.ip);\n  sdp.push(candidate.port);\n\n  var type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress); // was: relAddr\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort); // was: relPort\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substr(14).split(' ');\n}\n\n// Parses an rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  var parts = line.substr(9).split(' ');\n  var parsed = {\n    payloadType: parseInt(parts.shift(), 10) // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  // was: channels\n  parsed.numChannels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  return parsed;\n};\n\n// Generate an a=rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (codec.numChannels !== 1 ? '/' + codec.numChannels : '') + '\\r\\n';\n};\n\n// Parses an a=extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1]\n  };\n};\n\n// Generates a=extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n          ? '/' + headerExtension.direction\n          : '') +\n      ' ' + headerExtension.uri + '\\r\\n';\n};\n\n// Parses an ftmp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  var parsed = {};\n  var kv;\n  var parts = line.substr(line.indexOf(' ') + 1).split(';');\n  for (var j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates an a=ftmp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  var line = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    var params = [];\n    Object.keys(codec.parameters).forEach(function(param) {\n      params.push(param + '=' + codec.parameters[param]);\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses an rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  var parts = line.substr(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' ')\n  };\n};\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  var lines = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(function(fb) {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses an RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  var sp = line.indexOf(' ');\n  var parts = {\n    ssrc: parseInt(line.substr(7, sp - 7), 10)\n  };\n  var colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substr(sp + 1, colon - sp - 1);\n    parts.value = line.substr(colon + 1);\n  } else {\n    parts.attribute = line.substr(sp + 1);\n  }\n  return parts;\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substr(6);\n  }\n}\n\nSDPUtils.parseFingerprint = function(line) {\n  var parts = line.substr(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1]\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n      'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role.\n  // Note2: 'algorithm' is not case sensitive except in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint)\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  var sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(function(fp) {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  // Search in session part, too.\n  lines = lines.concat(SDPUtils.splitLines(sessionpart));\n  var iceParameters = {\n    usernameFragment: lines.filter(function(line) {\n      return line.indexOf('a=ice-ufrag:') === 0;\n    })[0].substr(12),\n    password: lines.filter(function(line) {\n      return line.indexOf('a=ice-pwd:') === 0;\n    })[0].substr(10)\n  };\n  return iceParameters;\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  return 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  var description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: []\n  };\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  for (var i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    var pt = mline[i];\n    var rtpmapline = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      var codec = SDPUtils.parseRtpMap(rtpmapline);\n      var fmtps = SDPUtils.matchPrefix(\n          mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n          mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(function(line) {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  var sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' UDP/TLS/RTP/SAVPF ';\n  sdp += caps.codecs.map(function(codec) {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(function(codec) {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  var maxptime = 0;\n  caps.codecs.forEach(function(codec) {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n  sdp += 'a=rtcp-mux\\r\\n';\n\n  caps.headerExtensions.forEach(function(extension) {\n    sdp += SDPUtils.writeExtmap(extension);\n  });\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  var encodingParameters = [];\n  var description = SDPUtils.parseRtpParameters(mediaSection);\n  var hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  var hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  var ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n  .map(function(line) {\n    return SDPUtils.parseSsrcMedia(line);\n  })\n  .filter(function(parts) {\n    return parts.attribute === 'cname';\n  });\n  var primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  var secondarySsrc;\n\n  var flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n  .map(function(line) {\n    var parts = line.split(' ');\n    parts.shift();\n    return parts.map(function(part) {\n      return parseInt(part, 10);\n    });\n  });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(function(codec) {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      var encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10),\n        rtx: {\n          ssrc: secondarySsrc\n        }\n      };\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: secondarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red'\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  var bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substr(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substr(5), 10);\n    }\n    encodingParameters.forEach(function(params) {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  var rtcpParameters = {};\n\n  var cname;\n  // Gets the first SSRC. Note that with RTX there might be multiple\n  // SSRCs.\n  var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n      .map(function(line) {\n        return SDPUtils.parseSsrcMedia(line);\n      })\n      .filter(function(obj) {\n        return obj.attribute === 'cname';\n      })[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  var rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  var mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  var parts;\n  var spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substr(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  var planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n  .map(function(line) {\n    return SDPUtils.parseSsrcMedia(line);\n  })\n  .filter(function(parts) {\n    return parts.attribute === 'msid';\n  });\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\nSDPUtils.writeSessionBoilerplate = function() {\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=thisisadapterortc 8169639915646943137 2 IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\nSDPUtils.writeMediaSection = function(transceiver, caps, type, stream) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n      transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n      transceiver.dtlsTransport.getLocalParameters(),\n      type === 'offer' ? 'actpass' : 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.direction) {\n    sdp += 'a=' + transceiver.direction + '\\r\\n';\n  } else if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    // spec.\n    var msid = 'msid:' + stream.id + ' ' +\n        transceiver.rtpSender.track.id + '\\r\\n';\n    sdp += 'a=' + msid;\n\n    // for Chrome.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  var lines = SDPUtils.splitLines(mediaSection);\n  for (var i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substr(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  return mline[0].substr(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\n// Expose public methods.\nmodule.exports = SDPUtils;\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\n// Expose public methods.\nmodule.exports = function() {\n  var shimError_ = function(e) {\n    return {\n      name: {PermissionDeniedError: 'NotAllowedError'}[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint,\n      toString: function() {\n        return this.name;\n      }\n    };\n  };\n\n  // getUserMedia error shim.\n  var origGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n  navigator.mediaDevices.getUserMedia = function(c) {\n    return origGetUserMedia(c).catch(function(e) {\n      return Promise.reject(shimError_(e));\n    });\n  };\n};\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\nvar browserDetails = require('../utils').browserDetails;\n\nvar edgeShim = {\n  shimPeerConnection: function() {\n    if (window.RTCIceGatherer) {\n      // ORTC defines an RTCIceCandidate object but no constructor.\n      // Not implemented in Edge.\n      if (!window.RTCIceCandidate) {\n        window.RTCIceCandidate = function(args) {\n          return args;\n        };\n      }\n      // ORTC does not have a session description object but\n      // other browsers (i.e. Chrome) that will support both PC and ORTC\n      // in the future might have this defined already.\n      if (!window.RTCSessionDescription) {\n        window.RTCSessionDescription = function(args) {\n          return args;\n        };\n      }\n      // this adds an additional event listener to MediaStrackTrack that signals\n      // when a tracks enabled property was changed.\n      var origMSTEnabled = Object.getOwnPropertyDescriptor(\n          MediaStreamTrack.prototype, 'enabled');\n      Object.defineProperty(MediaStreamTrack.prototype, 'enabled', {\n        set: function(value) {\n          origMSTEnabled.set.call(this, value);\n          var ev = new Event('enabled');\n          ev.enabled = value;\n          this.dispatchEvent(ev);\n        }\n      });\n    }\n\n    window.RTCPeerConnection = function(config) {\n      var self = this;\n\n      var _eventTarget = document.createDocumentFragment();\n      ['addEventListener', 'removeEventListener', 'dispatchEvent']\n          .forEach(function(method) {\n            self[method] = _eventTarget[method].bind(_eventTarget);\n          });\n\n      this.onicecandidate = null;\n      this.onaddstream = null;\n      this.ontrack = null;\n      this.onremovestream = null;\n      this.onsignalingstatechange = null;\n      this.oniceconnectionstatechange = null;\n      this.onnegotiationneeded = null;\n      this.ondatachannel = null;\n\n      this.localStreams = [];\n      this.remoteStreams = [];\n      this.getLocalStreams = function() {\n        return self.localStreams;\n      };\n      this.getRemoteStreams = function() {\n        return self.remoteStreams;\n      };\n\n      this.localDescription = new RTCSessionDescription({\n        type: '',\n        sdp: ''\n      });\n      this.remoteDescription = new RTCSessionDescription({\n        type: '',\n        sdp: ''\n      });\n      this.signalingState = 'stable';\n      this.iceConnectionState = 'new';\n      this.iceGatheringState = 'new';\n\n      this.iceOptions = {\n        gatherPolicy: 'all',\n        iceServers: []\n      };\n      if (config && config.iceTransportPolicy) {\n        switch (config.iceTransportPolicy) {\n          case 'all':\n          case 'relay':\n            this.iceOptions.gatherPolicy = config.iceTransportPolicy;\n            break;\n          case 'none':\n            // FIXME: remove once implementation and spec have added this.\n            throw new TypeError('iceTransportPolicy \"none\" not supported');\n          default:\n            // don't set iceTransportPolicy.\n            break;\n        }\n      }\n      this.usingBundle = config && config.bundlePolicy === 'max-bundle';\n\n      if (config && config.iceServers) {\n        // Edge does not like\n        // 1) stun:\n        // 2) turn: that does not have all of turn:host:port?transport=udp\n        // 3) turn: with ipv6 addresses\n        var iceServers = JSON.parse(JSON.stringify(config.iceServers));\n        this.iceOptions.iceServers = iceServers.filter(function(server) {\n          if (server && server.urls) {\n            var urls = server.urls;\n            if (typeof urls === 'string') {\n              urls = [urls];\n            }\n            urls = urls.filter(function(url) {\n              return (url.indexOf('turn:') === 0 &&\n                  url.indexOf('transport=udp') !== -1 &&\n                  url.indexOf('turn:[') === -1) ||\n                  (url.indexOf('stun:') === 0 &&\n                    browserDetails.version >= 14393);\n            })[0];\n            return !!urls;\n          }\n          return false;\n        });\n      }\n      this._config = config;\n\n      // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\n      // everything that is needed to describe a SDP m-line.\n      this.transceivers = [];\n\n      // since the iceGatherer is currently created in createOffer but we\n      // must not emit candidates until after setLocalDescription we buffer\n      // them in this array.\n      this._localIceCandidatesBuffer = [];\n    };\n\n    window.RTCPeerConnection.prototype._emitBufferedCandidates = function() {\n      var self = this;\n      var sections = SDPUtils.splitSections(self.localDescription.sdp);\n      // FIXME: need to apply ice candidates in a way which is async but\n      // in-order\n      this._localIceCandidatesBuffer.forEach(function(event) {\n        var end = !event.candidate || Object.keys(event.candidate).length === 0;\n        if (end) {\n          for (var j = 1; j < sections.length; j++) {\n            if (sections[j].indexOf('\\r\\na=end-of-candidates\\r\\n') === -1) {\n              sections[j] += 'a=end-of-candidates\\r\\n';\n            }\n          }\n        } else if (event.candidate.candidate.indexOf('typ endOfCandidates')\n            === -1) {\n          sections[event.candidate.sdpMLineIndex + 1] +=\n              'a=' + event.candidate.candidate + '\\r\\n';\n        }\n        self.localDescription.sdp = sections.join('');\n        self.dispatchEvent(event);\n        if (self.onicecandidate !== null) {\n          self.onicecandidate(event);\n        }\n        if (!event.candidate && self.iceGatheringState !== 'complete') {\n          var complete = self.transceivers.every(function(transceiver) {\n            return transceiver.iceGatherer &&\n                transceiver.iceGatherer.state === 'completed';\n          });\n          if (complete) {\n            self.iceGatheringState = 'complete';\n          }\n        }\n      });\n      this._localIceCandidatesBuffer = [];\n    };\n\n    window.RTCPeerConnection.prototype.getConfiguration = function() {\n      return this._config;\n    };\n\n    window.RTCPeerConnection.prototype.addStream = function(stream) {\n      // Clone is necessary for local demos mostly, attaching directly\n      // to two different senders does not work (build 10547).\n      var clonedStream = stream.clone();\n      stream.getTracks().forEach(function(track, idx) {\n        var clonedTrack = clonedStream.getTracks()[idx];\n        track.addEventListener('enabled', function(event) {\n          clonedTrack.enabled = event.enabled;\n        });\n      });\n      this.localStreams.push(clonedStream);\n      this._maybeFireNegotiationNeeded();\n    };\n\n    window.RTCPeerConnection.prototype.removeStream = function(stream) {\n      var idx = this.localStreams.indexOf(stream);\n      if (idx > -1) {\n        this.localStreams.splice(idx, 1);\n        this._maybeFireNegotiationNeeded();\n      }\n    };\n\n    window.RTCPeerConnection.prototype.getSenders = function() {\n      return this.transceivers.filter(function(transceiver) {\n        return !!transceiver.rtpSender;\n      })\n      .map(function(transceiver) {\n        return transceiver.rtpSender;\n      });\n    };\n\n    window.RTCPeerConnection.prototype.getReceivers = function() {\n      return this.transceivers.filter(function(transceiver) {\n        return !!transceiver.rtpReceiver;\n      })\n      .map(function(transceiver) {\n        return transceiver.rtpReceiver;\n      });\n    };\n\n    // Determines the intersection of local and remote capabilities.\n    window.RTCPeerConnection.prototype._getCommonCapabilities =\n        function(localCapabilities, remoteCapabilities) {\n          var commonCapabilities = {\n            codecs: [],\n            headerExtensions: [],\n            fecMechanisms: []\n          };\n          localCapabilities.codecs.forEach(function(lCodec) {\n            for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\n              var rCodec = remoteCapabilities.codecs[i];\n              if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() &&\n                  lCodec.clockRate === rCodec.clockRate) {\n                // number of channels is the highest common number of channels\n                rCodec.numChannels = Math.min(lCodec.numChannels,\n                    rCodec.numChannels);\n                // push rCodec so we reply with offerer payload type\n                commonCapabilities.codecs.push(rCodec);\n\n                // determine common feedback mechanisms\n                rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function(fb) {\n                  for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\n                    if (lCodec.rtcpFeedback[j].type === fb.type &&\n                        lCodec.rtcpFeedback[j].parameter === fb.parameter) {\n                      return true;\n                    }\n                  }\n                  return false;\n                });\n                // FIXME: also need to determine .parameters\n                //  see https://github.com/openpeer/ortc/issues/569\n                break;\n              }\n            }\n          });\n\n          localCapabilities.headerExtensions\n              .forEach(function(lHeaderExtension) {\n                for (var i = 0; i < remoteCapabilities.headerExtensions.length;\n                     i++) {\n                  var rHeaderExtension = remoteCapabilities.headerExtensions[i];\n                  if (lHeaderExtension.uri === rHeaderExtension.uri) {\n                    commonCapabilities.headerExtensions.push(rHeaderExtension);\n                    break;\n                  }\n                }\n              });\n\n          // FIXME: fecMechanisms\n          return commonCapabilities;\n        };\n\n    // Create ICE gatherer, ICE transport and DTLS transport.\n    window.RTCPeerConnection.prototype._createIceAndDtlsTransports =\n        function(mid, sdpMLineIndex) {\n          var self = this;\n          var iceGatherer = new RTCIceGatherer(self.iceOptions);\n          var iceTransport = new RTCIceTransport(iceGatherer);\n          iceGatherer.onlocalcandidate = function(evt) {\n            var event = new Event('icecandidate');\n            event.candidate = {sdpMid: mid, sdpMLineIndex: sdpMLineIndex};\n\n            var cand = evt.candidate;\n            var end = !cand || Object.keys(cand).length === 0;\n            // Edge emits an empty object for RTCIceCandidateComplete‥\n            if (end) {\n              // polyfill since RTCIceGatherer.state is not implemented in\n              // Edge 10547 yet.\n              if (iceGatherer.state === undefined) {\n                iceGatherer.state = 'completed';\n              }\n\n              // Emit a candidate with type endOfCandidates to make the samples\n              // work. Edge requires addIceCandidate with this empty candidate\n              // to start checking. The real solution is to signal\n              // end-of-candidates to the other side when getting the null\n              // candidate but some apps (like the samples) don't do that.\n              event.candidate.candidate =\n                  'candidate:1 1 udp 1 0.0.0.0 9 typ endOfCandidates';\n            } else {\n              // RTCIceCandidate doesn't have a component, needs to be added\n              cand.component = iceTransport.component === 'RTCP' ? 2 : 1;\n              event.candidate.candidate = SDPUtils.writeCandidate(cand);\n            }\n\n            // update local description.\n            var sections = SDPUtils.splitSections(self.localDescription.sdp);\n            if (event.candidate.candidate.indexOf('typ endOfCandidates')\n                === -1) {\n              sections[event.candidate.sdpMLineIndex + 1] +=\n                  'a=' + event.candidate.candidate + '\\r\\n';\n            } else {\n              sections[event.candidate.sdpMLineIndex + 1] +=\n                  'a=end-of-candidates\\r\\n';\n            }\n            self.localDescription.sdp = sections.join('');\n\n            var complete = self.transceivers.every(function(transceiver) {\n              return transceiver.iceGatherer &&\n                  transceiver.iceGatherer.state === 'completed';\n            });\n\n            // Emit candidate if localDescription is set.\n            // Also emits null candidate when all gatherers are complete.\n            switch (self.iceGatheringState) {\n              case 'new':\n                self._localIceCandidatesBuffer.push(event);\n                if (end && complete) {\n                  self._localIceCandidatesBuffer.push(\n                      new Event('icecandidate'));\n                }\n                break;\n              case 'gathering':\n                self._emitBufferedCandidates();\n                self.dispatchEvent(event);\n                if (self.onicecandidate !== null) {\n                  self.onicecandidate(event);\n                }\n                if (complete) {\n                  self.dispatchEvent(new Event('icecandidate'));\n                  if (self.onicecandidate !== null) {\n                    self.onicecandidate(new Event('icecandidate'));\n                  }\n                  self.iceGatheringState = 'complete';\n                }\n                break;\n              case 'complete':\n                // should not happen... currently!\n                break;\n              default: // no-op.\n                break;\n            }\n          };\n          iceTransport.onicestatechange = function() {\n            self._updateConnectionState();\n          };\n\n          var dtlsTransport = new RTCDtlsTransport(iceTransport);\n          dtlsTransport.ondtlsstatechange = function() {\n            self._updateConnectionState();\n          };\n          dtlsTransport.onerror = function() {\n            // onerror does not set state to failed by itself.\n            dtlsTransport.state = 'failed';\n            self._updateConnectionState();\n          };\n\n          return {\n            iceGatherer: iceGatherer,\n            iceTransport: iceTransport,\n            dtlsTransport: dtlsTransport\n          };\n        };\n\n    // Start the RTP Sender and Receiver for a transceiver.\n    window.RTCPeerConnection.prototype._transceive = function(transceiver,\n        send, recv) {\n      var params = this._getCommonCapabilities(transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n      if (send && transceiver.rtpSender) {\n        params.encodings = transceiver.sendEncodingParameters;\n        params.rtcp = {\n          cname: SDPUtils.localCName\n        };\n        if (transceiver.recvEncodingParameters.length) {\n          params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\n        }\n        transceiver.rtpSender.send(params);\n      }\n      if (recv && transceiver.rtpReceiver) {\n        // remove RTX field in Edge 14942\n        if (transceiver.kind === 'video'\n            && transceiver.recvEncodingParameters) {\n          transceiver.recvEncodingParameters.forEach(function(p) {\n            delete p.rtx;\n          });\n        }\n        params.encodings = transceiver.recvEncodingParameters;\n        params.rtcp = {\n          cname: transceiver.cname\n        };\n        if (transceiver.sendEncodingParameters.length) {\n          params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\n        }\n        transceiver.rtpReceiver.receive(params);\n      }\n    };\n\n    window.RTCPeerConnection.prototype.setLocalDescription =\n        function(description) {\n          var self = this;\n          var sections;\n          var sessionpart;\n          if (description.type === 'offer') {\n            // FIXME: What was the purpose of this empty if statement?\n            // if (!this._pendingOffer) {\n            // } else {\n            if (this._pendingOffer) {\n              // VERY limited support for SDP munging. Limited to:\n              // * changing the order of codecs\n              sections = SDPUtils.splitSections(description.sdp);\n              sessionpart = sections.shift();\n              sections.forEach(function(mediaSection, sdpMLineIndex) {\n                var caps = SDPUtils.parseRtpParameters(mediaSection);\n                self._pendingOffer[sdpMLineIndex].localCapabilities = caps;\n              });\n              this.transceivers = this._pendingOffer;\n              delete this._pendingOffer;\n            }\n          } else if (description.type === 'answer') {\n            sections = SDPUtils.splitSections(self.remoteDescription.sdp);\n            sessionpart = sections.shift();\n            var isIceLite = SDPUtils.matchPrefix(sessionpart,\n                'a=ice-lite').length > 0;\n            sections.forEach(function(mediaSection, sdpMLineIndex) {\n              var transceiver = self.transceivers[sdpMLineIndex];\n              var iceGatherer = transceiver.iceGatherer;\n              var iceTransport = transceiver.iceTransport;\n              var dtlsTransport = transceiver.dtlsTransport;\n              var localCapabilities = transceiver.localCapabilities;\n              var remoteCapabilities = transceiver.remoteCapabilities;\n\n              var rejected = mediaSection.split('\\n', 1)[0]\n                  .split(' ', 2)[1] === '0';\n\n              if (!rejected && !transceiver.isDatachannel) {\n                var remoteIceParameters = SDPUtils.getIceParameters(\n                    mediaSection, sessionpart);\n                if (isIceLite) {\n                  var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\n                  .map(function(cand) {\n                    return SDPUtils.parseCandidate(cand);\n                  })\n                  .filter(function(cand) {\n                    return cand.component === '1';\n                  });\n                  // ice-lite only includes host candidates in the SDP so we can\n                  // use setRemoteCandidates (which implies an\n                  // RTCIceCandidateComplete)\n                  if (cands.length) {\n                    iceTransport.setRemoteCandidates(cands);\n                  }\n                }\n                var remoteDtlsParameters = SDPUtils.getDtlsParameters(\n                    mediaSection, sessionpart);\n                if (isIceLite) {\n                  remoteDtlsParameters.role = 'server';\n                }\n\n                if (!self.usingBundle || sdpMLineIndex === 0) {\n                  iceTransport.start(iceGatherer, remoteIceParameters,\n                      isIceLite ? 'controlling' : 'controlled');\n                  dtlsTransport.start(remoteDtlsParameters);\n                }\n\n                // Calculate intersection of capabilities.\n                var params = self._getCommonCapabilities(localCapabilities,\n                    remoteCapabilities);\n\n                // Start the RTCRtpSender. The RTCRtpReceiver for this\n                // transceiver has already been started in setRemoteDescription.\n                self._transceive(transceiver,\n                    params.codecs.length > 0,\n                    false);\n              }\n            });\n          }\n\n          this.localDescription = {\n            type: description.type,\n            sdp: description.sdp\n          };\n          switch (description.type) {\n            case 'offer':\n              this._updateSignalingState('have-local-offer');\n              break;\n            case 'answer':\n              this._updateSignalingState('stable');\n              break;\n            default:\n              throw new TypeError('unsupported type \"' + description.type +\n                  '\"');\n          }\n\n          // If a success callback was provided, emit ICE candidates after it\n          // has been executed. Otherwise, emit callback after the Promise is\n          // resolved.\n          var hasCallback = arguments.length > 1 &&\n            typeof arguments[1] === 'function';\n          if (hasCallback) {\n            var cb = arguments[1];\n            window.setTimeout(function() {\n              cb();\n              if (self.iceGatheringState === 'new') {\n                self.iceGatheringState = 'gathering';\n              }\n              self._emitBufferedCandidates();\n            }, 0);\n          }\n          var p = Promise.resolve();\n          p.then(function() {\n            if (!hasCallback) {\n              if (self.iceGatheringState === 'new') {\n                self.iceGatheringState = 'gathering';\n              }\n              // Usually candidates will be emitted earlier.\n              window.setTimeout(self._emitBufferedCandidates.bind(self), 500);\n            }\n          });\n          return p;\n        };\n\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n        function(description) {\n          var self = this;\n          var stream = new MediaStream();\n          var receiverList = [];\n          var sections = SDPUtils.splitSections(description.sdp);\n          var sessionpart = sections.shift();\n          var isIceLite = SDPUtils.matchPrefix(sessionpart,\n              'a=ice-lite').length > 0;\n          this.usingBundle = SDPUtils.matchPrefix(sessionpart,\n              'a=group:BUNDLE ').length > 0;\n          sections.forEach(function(mediaSection, sdpMLineIndex) {\n            var lines = SDPUtils.splitLines(mediaSection);\n            var mline = lines[0].substr(2).split(' ');\n            var kind = mline[0];\n            var rejected = mline[1] === '0';\n            var direction = SDPUtils.getDirection(mediaSection, sessionpart);\n\n            var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:');\n            if (mid.length) {\n              mid = mid[0].substr(6);\n            } else {\n              mid = SDPUtils.generateIdentifier();\n            }\n\n            // Reject datachannels which are not implemented yet.\n            if (kind === 'application' && mline[2] === 'DTLS/SCTP') {\n              self.transceivers[sdpMLineIndex] = {\n                mid: mid,\n                isDatachannel: true\n              };\n              return;\n            }\n\n            var transceiver;\n            var iceGatherer;\n            var iceTransport;\n            var dtlsTransport;\n            var rtpSender;\n            var rtpReceiver;\n            var sendEncodingParameters;\n            var recvEncodingParameters;\n            var localCapabilities;\n\n            var track;\n            // FIXME: ensure the mediaSection has rtcp-mux set.\n            var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\n            var remoteIceParameters;\n            var remoteDtlsParameters;\n            if (!rejected) {\n              remoteIceParameters = SDPUtils.getIceParameters(mediaSection,\n                  sessionpart);\n              remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection,\n                  sessionpart);\n              remoteDtlsParameters.role = 'client';\n            }\n            recvEncodingParameters =\n                SDPUtils.parseRtpEncodingParameters(mediaSection);\n\n            var cname;\n            // Gets the first SSRC. Note that with RTX there might be multiple\n            // SSRCs.\n            var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n                .map(function(line) {\n                  return SDPUtils.parseSsrcMedia(line);\n                })\n                .filter(function(obj) {\n                  return obj.attribute === 'cname';\n                })[0];\n            if (remoteSsrc) {\n              cname = remoteSsrc.value;\n            }\n\n            var isComplete = SDPUtils.matchPrefix(mediaSection,\n                'a=end-of-candidates', sessionpart).length > 0;\n            var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\n                .map(function(cand) {\n                  return SDPUtils.parseCandidate(cand);\n                })\n                .filter(function(cand) {\n                  return cand.component === '1';\n                });\n            if (description.type === 'offer' && !rejected) {\n              var transports = self.usingBundle && sdpMLineIndex > 0 ? {\n                iceGatherer: self.transceivers[0].iceGatherer,\n                iceTransport: self.transceivers[0].iceTransport,\n                dtlsTransport: self.transceivers[0].dtlsTransport\n              } : self._createIceAndDtlsTransports(mid, sdpMLineIndex);\n\n              if (isComplete) {\n                transports.iceTransport.setRemoteCandidates(cands);\n              }\n\n              localCapabilities = RTCRtpReceiver.getCapabilities(kind);\n\n              // filter RTX until additional stuff needed for RTX is implemented\n              // in adapter.js\n              localCapabilities.codecs = localCapabilities.codecs.filter(\n                  function(codec) {\n                    return codec.name !== 'rtx';\n                  });\n\n              sendEncodingParameters = [{\n                ssrc: (2 * sdpMLineIndex + 2) * 1001\n              }];\n\n              rtpReceiver = new RTCRtpReceiver(transports.dtlsTransport, kind);\n\n              track = rtpReceiver.track;\n              receiverList.push([track, rtpReceiver]);\n              // FIXME: not correct when there are multiple streams but that is\n              // not currently supported in this shim.\n              stream.addTrack(track);\n\n              // FIXME: look at direction.\n              if (self.localStreams.length > 0 &&\n                  self.localStreams[0].getTracks().length >= sdpMLineIndex) {\n                var localTrack;\n                if (kind === 'audio') {\n                  localTrack = self.localStreams[0].getAudioTracks()[0];\n                } else if (kind === 'video') {\n                  localTrack = self.localStreams[0].getVideoTracks()[0];\n                }\n                if (localTrack) {\n                  rtpSender = new RTCRtpSender(localTrack,\n                      transports.dtlsTransport);\n                }\n              }\n\n              self.transceivers[sdpMLineIndex] = {\n                iceGatherer: transports.iceGatherer,\n                iceTransport: transports.iceTransport,\n                dtlsTransport: transports.dtlsTransport,\n                localCapabilities: localCapabilities,\n                remoteCapabilities: remoteCapabilities,\n                rtpSender: rtpSender,\n                rtpReceiver: rtpReceiver,\n                kind: kind,\n                mid: mid,\n                cname: cname,\n                sendEncodingParameters: sendEncodingParameters,\n                recvEncodingParameters: recvEncodingParameters\n              };\n              // Start the RTCRtpReceiver now. The RTPSender is started in\n              // setLocalDescription.\n              self._transceive(self.transceivers[sdpMLineIndex],\n                  false,\n                  direction === 'sendrecv' || direction === 'sendonly');\n            } else if (description.type === 'answer' && !rejected) {\n              transceiver = self.transceivers[sdpMLineIndex];\n              iceGatherer = transceiver.iceGatherer;\n              iceTransport = transceiver.iceTransport;\n              dtlsTransport = transceiver.dtlsTransport;\n              rtpSender = transceiver.rtpSender;\n              rtpReceiver = transceiver.rtpReceiver;\n              sendEncodingParameters = transceiver.sendEncodingParameters;\n              localCapabilities = transceiver.localCapabilities;\n\n              self.transceivers[sdpMLineIndex].recvEncodingParameters =\n                  recvEncodingParameters;\n              self.transceivers[sdpMLineIndex].remoteCapabilities =\n                  remoteCapabilities;\n              self.transceivers[sdpMLineIndex].cname = cname;\n\n              if ((isIceLite || isComplete) && cands.length) {\n                iceTransport.setRemoteCandidates(cands);\n              }\n              if (!self.usingBundle || sdpMLineIndex === 0) {\n                iceTransport.start(iceGatherer, remoteIceParameters,\n                    'controlling');\n                dtlsTransport.start(remoteDtlsParameters);\n              }\n\n              self._transceive(transceiver,\n                  direction === 'sendrecv' || direction === 'recvonly',\n                  direction === 'sendrecv' || direction === 'sendonly');\n\n              if (rtpReceiver &&\n                  (direction === 'sendrecv' || direction === 'sendonly')) {\n                track = rtpReceiver.track;\n                receiverList.push([track, rtpReceiver]);\n                stream.addTrack(track);\n              } else {\n                // FIXME: actually the receiver should be created later.\n                delete transceiver.rtpReceiver;\n              }\n            }\n          });\n\n          this.remoteDescription = {\n            type: description.type,\n            sdp: description.sdp\n          };\n          switch (description.type) {\n            case 'offer':\n              this._updateSignalingState('have-remote-offer');\n              break;\n            case 'answer':\n              this._updateSignalingState('stable');\n              break;\n            default:\n              throw new TypeError('unsupported type \"' + description.type +\n                  '\"');\n          }\n          if (stream.getTracks().length) {\n            self.remoteStreams.push(stream);\n            window.setTimeout(function() {\n              var event = new Event('addstream');\n              event.stream = stream;\n              self.dispatchEvent(event);\n              if (self.onaddstream !== null) {\n                window.setTimeout(function() {\n                  self.onaddstream(event);\n                }, 0);\n              }\n\n              receiverList.forEach(function(item) {\n                var track = item[0];\n                var receiver = item[1];\n                var trackEvent = new Event('track');\n                trackEvent.track = track;\n                trackEvent.receiver = receiver;\n                trackEvent.streams = [stream];\n                self.dispatchEvent(event);\n                if (self.ontrack !== null) {\n                  window.setTimeout(function() {\n                    self.ontrack(trackEvent);\n                  }, 0);\n                }\n              });\n            }, 0);\n          }\n          if (arguments.length > 1 && typeof arguments[1] === 'function') {\n            window.setTimeout(arguments[1], 0);\n          }\n          return Promise.resolve();\n        };\n\n    window.RTCPeerConnection.prototype.close = function() {\n      this.transceivers.forEach(function(transceiver) {\n        /* not yet\n        if (transceiver.iceGatherer) {\n          transceiver.iceGatherer.close();\n        }\n        */\n        if (transceiver.iceTransport) {\n          transceiver.iceTransport.stop();\n        }\n        if (transceiver.dtlsTransport) {\n          transceiver.dtlsTransport.stop();\n        }\n        if (transceiver.rtpSender) {\n          transceiver.rtpSender.stop();\n        }\n        if (transceiver.rtpReceiver) {\n          transceiver.rtpReceiver.stop();\n        }\n      });\n      // FIXME: clean up tracks, local streams, remote streams, etc\n      this._updateSignalingState('closed');\n    };\n\n    // Update the signaling state.\n    window.RTCPeerConnection.prototype._updateSignalingState =\n        function(newState) {\n          this.signalingState = newState;\n          var event = new Event('signalingstatechange');\n          this.dispatchEvent(event);\n          if (this.onsignalingstatechange !== null) {\n            this.onsignalingstatechange(event);\n          }\n        };\n\n    // Determine whether to fire the negotiationneeded event.\n    window.RTCPeerConnection.prototype._maybeFireNegotiationNeeded =\n        function() {\n          // Fire away (for now).\n          var event = new Event('negotiationneeded');\n          this.dispatchEvent(event);\n          if (this.onnegotiationneeded !== null) {\n            this.onnegotiationneeded(event);\n          }\n        };\n\n    // Update the connection state.\n    window.RTCPeerConnection.prototype._updateConnectionState = function() {\n      var self = this;\n      var newState;\n      var states = {\n        'new': 0,\n        closed: 0,\n        connecting: 0,\n        checking: 0,\n        connected: 0,\n        completed: 0,\n        failed: 0\n      };\n      this.transceivers.forEach(function(transceiver) {\n        states[transceiver.iceTransport.state]++;\n        states[transceiver.dtlsTransport.state]++;\n      });\n      // ICETransport.completed and connected are the same for this purpose.\n      states.connected += states.completed;\n\n      newState = 'new';\n      if (states.failed > 0) {\n        newState = 'failed';\n      } else if (states.connecting > 0 || states.checking > 0) {\n        newState = 'connecting';\n      } else if (states.disconnected > 0) {\n        newState = 'disconnected';\n      } else if (states.new > 0) {\n        newState = 'new';\n      } else if (states.connected > 0 || states.completed > 0) {\n        newState = 'connected';\n      }\n\n      if (newState !== self.iceConnectionState) {\n        self.iceConnectionState = newState;\n        var event = new Event('iceconnectionstatechange');\n        this.dispatchEvent(event);\n        if (this.oniceconnectionstatechange !== null) {\n          this.oniceconnectionstatechange(event);\n        }\n      }\n    };\n\n    window.RTCPeerConnection.prototype.createOffer = function() {\n      var self = this;\n      if (this._pendingOffer) {\n        throw new Error('createOffer called while there is a pending offer.');\n      }\n      var offerOptions;\n      if (arguments.length === 1 && typeof arguments[0] !== 'function') {\n        offerOptions = arguments[0];\n      } else if (arguments.length === 3) {\n        offerOptions = arguments[2];\n      }\n\n      var tracks = [];\n      var numAudioTracks = 0;\n      var numVideoTracks = 0;\n      // Default to sendrecv.\n      if (this.localStreams.length) {\n        numAudioTracks = this.localStreams[0].getAudioTracks().length;\n        numVideoTracks = this.localStreams[0].getVideoTracks().length;\n      }\n      // Determine number of audio and video tracks we need to send/recv.\n      if (offerOptions) {\n        // Reject Chrome legacy constraints.\n        if (offerOptions.mandatory || offerOptions.optional) {\n          throw new TypeError(\n              'Legacy mandatory/optional constraints not supported.');\n        }\n        if (offerOptions.offerToReceiveAudio !== undefined) {\n          numAudioTracks = offerOptions.offerToReceiveAudio;\n        }\n        if (offerOptions.offerToReceiveVideo !== undefined) {\n          numVideoTracks = offerOptions.offerToReceiveVideo;\n        }\n      }\n      if (this.localStreams.length) {\n        // Push local streams.\n        this.localStreams[0].getTracks().forEach(function(track) {\n          tracks.push({\n            kind: track.kind,\n            track: track,\n            wantReceive: track.kind === 'audio' ?\n                numAudioTracks > 0 : numVideoTracks > 0\n          });\n          if (track.kind === 'audio') {\n            numAudioTracks--;\n          } else if (track.kind === 'video') {\n            numVideoTracks--;\n          }\n        });\n      }\n      // Create M-lines for recvonly streams.\n      while (numAudioTracks > 0 || numVideoTracks > 0) {\n        if (numAudioTracks > 0) {\n          tracks.push({\n            kind: 'audio',\n            wantReceive: true\n          });\n          numAudioTracks--;\n        }\n        if (numVideoTracks > 0) {\n          tracks.push({\n            kind: 'video',\n            wantReceive: true\n          });\n          numVideoTracks--;\n        }\n      }\n\n      var sdp = SDPUtils.writeSessionBoilerplate();\n      var transceivers = [];\n      tracks.forEach(function(mline, sdpMLineIndex) {\n        // For each track, create an ice gatherer, ice transport,\n        // dtls transport, potentially rtpsender and rtpreceiver.\n        var track = mline.track;\n        var kind = mline.kind;\n        var mid = SDPUtils.generateIdentifier();\n\n        var transports = self.usingBundle && sdpMLineIndex > 0 ? {\n          iceGatherer: transceivers[0].iceGatherer,\n          iceTransport: transceivers[0].iceTransport,\n          dtlsTransport: transceivers[0].dtlsTransport\n        } : self._createIceAndDtlsTransports(mid, sdpMLineIndex);\n\n        var localCapabilities = RTCRtpSender.getCapabilities(kind);\n        // filter RTX until additional stuff needed for RTX is implemented\n        // in adapter.js\n        localCapabilities.codecs = localCapabilities.codecs.filter(\n            function(codec) {\n              return codec.name !== 'rtx';\n            });\n        localCapabilities.codecs.forEach(function(codec) {\n          // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552\n          // by adding level-asymmetry-allowed=1\n          if (codec.name === 'H264' &&\n              codec.parameters['level-asymmetry-allowed'] === undefined) {\n            codec.parameters['level-asymmetry-allowed'] = '1';\n          }\n        });\n\n        var rtpSender;\n        var rtpReceiver;\n\n        // generate an ssrc now, to be used later in rtpSender.send\n        var sendEncodingParameters = [{\n          ssrc: (2 * sdpMLineIndex + 1) * 1001\n        }];\n        if (track) {\n          rtpSender = new RTCRtpSender(track, transports.dtlsTransport);\n        }\n\n        if (mline.wantReceive) {\n          rtpReceiver = new RTCRtpReceiver(transports.dtlsTransport, kind);\n        }\n\n        transceivers[sdpMLineIndex] = {\n          iceGatherer: transports.iceGatherer,\n          iceTransport: transports.iceTransport,\n          dtlsTransport: transports.dtlsTransport,\n          localCapabilities: localCapabilities,\n          remoteCapabilities: null,\n          rtpSender: rtpSender,\n          rtpReceiver: rtpReceiver,\n          kind: kind,\n          mid: mid,\n          sendEncodingParameters: sendEncodingParameters,\n          recvEncodingParameters: null\n        };\n      });\n      if (this.usingBundle) {\n        sdp += 'a=group:BUNDLE ' + transceivers.map(function(t) {\n          return t.mid;\n        }).join(' ') + '\\r\\n';\n      }\n      tracks.forEach(function(mline, sdpMLineIndex) {\n        var transceiver = transceivers[sdpMLineIndex];\n        sdp += SDPUtils.writeMediaSection(transceiver,\n            transceiver.localCapabilities, 'offer', self.localStreams[0]);\n      });\n\n      this._pendingOffer = transceivers;\n      var desc = new RTCSessionDescription({\n        type: 'offer',\n        sdp: sdp\n      });\n      if (arguments.length && typeof arguments[0] === 'function') {\n        window.setTimeout(arguments[0], 0, desc);\n      }\n      return Promise.resolve(desc);\n    };\n\n    window.RTCPeerConnection.prototype.createAnswer = function() {\n      var self = this;\n\n      var sdp = SDPUtils.writeSessionBoilerplate();\n      if (this.usingBundle) {\n        sdp += 'a=group:BUNDLE ' + this.transceivers.map(function(t) {\n          return t.mid;\n        }).join(' ') + '\\r\\n';\n      }\n      this.transceivers.forEach(function(transceiver) {\n        if (transceiver.isDatachannel) {\n          sdp += 'm=application 0 DTLS/SCTP 5000\\r\\n' +\n              'c=IN IP4 0.0.0.0\\r\\n' +\n              'a=mid:' + transceiver.mid + '\\r\\n';\n          return;\n        }\n        // Calculate intersection of capabilities.\n        var commonCapabilities = self._getCommonCapabilities(\n            transceiver.localCapabilities,\n            transceiver.remoteCapabilities);\n\n        sdp += SDPUtils.writeMediaSection(transceiver, commonCapabilities,\n            'answer', self.localStreams[0]);\n      });\n\n      var desc = new RTCSessionDescription({\n        type: 'answer',\n        sdp: sdp\n      });\n      if (arguments.length && typeof arguments[0] === 'function') {\n        window.setTimeout(arguments[0], 0, desc);\n      }\n      return Promise.resolve(desc);\n    };\n\n    window.RTCPeerConnection.prototype.addIceCandidate = function(candidate) {\n      if (!candidate) {\n        this.transceivers.forEach(function(transceiver) {\n          transceiver.iceTransport.addRemoteCandidate({});\n        });\n      } else {\n        var mLineIndex = candidate.sdpMLineIndex;\n        if (candidate.sdpMid) {\n          for (var i = 0; i < this.transceivers.length; i++) {\n            if (this.transceivers[i].mid === candidate.sdpMid) {\n              mLineIndex = i;\n              break;\n            }\n          }\n        }\n        var transceiver = this.transceivers[mLineIndex];\n        if (transceiver) {\n          var cand = Object.keys(candidate.candidate).length > 0 ?\n              SDPUtils.parseCandidate(candidate.candidate) : {};\n          // Ignore Chrome's invalid candidates since Edge does not like them.\n          if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\n            return;\n          }\n          // Ignore RTCP candidates, we assume RTCP-MUX.\n          if (cand.component !== '1') {\n            return;\n          }\n          // A dirty hack to make samples work.\n          if (cand.type === 'endOfCandidates') {\n            cand = {};\n          }\n          transceiver.iceTransport.addRemoteCandidate(cand);\n\n          // update the remoteDescription.\n          var sections = SDPUtils.splitSections(this.remoteDescription.sdp);\n          sections[mLineIndex + 1] += (cand.type ? candidate.candidate.trim()\n              : 'a=end-of-candidates') + '\\r\\n';\n          this.remoteDescription.sdp = sections.join('');\n        }\n      }\n      if (arguments.length > 1 && typeof arguments[1] === 'function') {\n        window.setTimeout(arguments[1], 0);\n      }\n      return Promise.resolve();\n    };\n\n    window.RTCPeerConnection.prototype.getStats = function() {\n      var promises = [];\n      this.transceivers.forEach(function(transceiver) {\n        ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport',\n            'dtlsTransport'].forEach(function(method) {\n              if (transceiver[method]) {\n                promises.push(transceiver[method].getStats());\n              }\n            });\n      });\n      var cb = arguments.length > 1 && typeof arguments[1] === 'function' &&\n          arguments[1];\n      return new Promise(function(resolve) {\n        // shim getStats with maplike support\n        var results = new Map();\n        Promise.all(promises).then(function(res) {\n          res.forEach(function(result) {\n            Object.keys(result).forEach(function(id) {\n              results.set(id, result[id]);\n              results[id] = result[id];\n            });\n          });\n          if (cb) {\n            window.setTimeout(cb, 0, results);\n          }\n          resolve(results);\n        });\n      });\n    };\n  }\n};\n\n// Expose public methods.\nmodule.exports = {\n  shimPeerConnection: edgeShim.shimPeerConnection,\n  shimGetUserMedia: require('./getusermedia')\n};\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar logging = require('../utils').log;\nvar browserDetails = require('../utils').browserDetails;\n\n// Expose public methods.\nmodule.exports = function() {\n  var shimError_ = function(e) {\n    return {\n      name: {\n        SecurityError: 'NotAllowedError',\n        PermissionDeniedError: 'NotAllowedError'\n      }[e.name] || e.name,\n      message: {\n        'The operation is insecure.': 'The request is not allowed by the ' +\n        'user agent or the platform in the current context.'\n      }[e.message] || e.message,\n      constraint: e.constraint,\n      toString: function() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  // getUserMedia constraints shim.\n  var getUserMedia_ = function(constraints, onSuccess, onError) {\n    var constraintsToFF37_ = function(c) {\n      if (typeof c !== 'object' || c.require) {\n        return c;\n      }\n      var require = [];\n      Object.keys(c).forEach(function(key) {\n        if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n          return;\n        }\n        var r = c[key] = (typeof c[key] === 'object') ?\n            c[key] : {ideal: c[key]};\n        if (r.min !== undefined ||\n            r.max !== undefined || r.exact !== undefined) {\n          require.push(key);\n        }\n        if (r.exact !== undefined) {\n          if (typeof r.exact === 'number') {\n            r. min = r.max = r.exact;\n          } else {\n            c[key] = r.exact;\n          }\n          delete r.exact;\n        }\n        if (r.ideal !== undefined) {\n          c.advanced = c.advanced || [];\n          var oc = {};\n          if (typeof r.ideal === 'number') {\n            oc[key] = {min: r.ideal, max: r.ideal};\n          } else {\n            oc[key] = r.ideal;\n          }\n          c.advanced.push(oc);\n          delete r.ideal;\n          if (!Object.keys(r).length) {\n            delete c[key];\n          }\n        }\n      });\n      if (require.length) {\n        c.require = require;\n      }\n      return c;\n    };\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (browserDetails.version < 38) {\n      logging('spec: ' + JSON.stringify(constraints));\n      if (constraints.audio) {\n        constraints.audio = constraintsToFF37_(constraints.audio);\n      }\n      if (constraints.video) {\n        constraints.video = constraintsToFF37_(constraints.video);\n      }\n      logging('ff37: ' + JSON.stringify(constraints));\n    }\n    return navigator.mozGetUserMedia(constraints, onSuccess, function(e) {\n      onError(shimError_(e));\n    });\n  };\n\n  // Returns the result of getUserMedia as a Promise.\n  var getUserMediaPromise_ = function(constraints) {\n    return new Promise(function(resolve, reject) {\n      getUserMedia_(constraints, resolve, reject);\n    });\n  };\n\n  // Shim for mediaDevices on older versions.\n  if (!navigator.mediaDevices) {\n    navigator.mediaDevices = {getUserMedia: getUserMediaPromise_,\n      addEventListener: function() { },\n      removeEventListener: function() { }\n    };\n  }\n  navigator.mediaDevices.enumerateDevices =\n      navigator.mediaDevices.enumerateDevices || function() {\n        return new Promise(function(resolve) {\n          var infos = [\n            {kind: 'audioinput', deviceId: 'default', label: '', groupId: ''},\n            {kind: 'videoinput', deviceId: 'default', label: '', groupId: ''}\n          ];\n          resolve(infos);\n        });\n      };\n\n  if (browserDetails.version < 41) {\n    // Work around http://bugzil.la/1169665\n    var orgEnumerateDevices =\n        navigator.mediaDevices.enumerateDevices.bind(navigator.mediaDevices);\n    navigator.mediaDevices.enumerateDevices = function() {\n      return orgEnumerateDevices().then(undefined, function(e) {\n        if (e.name === 'NotFoundError') {\n          return [];\n        }\n        throw e;\n      });\n    };\n  }\n  if (browserDetails.version < 49) {\n    var origGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      return origGetUserMedia(c).then(function(stream) {\n        // Work around https://bugzil.la/802326\n        if (c.audio && !stream.getAudioTracks().length ||\n            c.video && !stream.getVideoTracks().length) {\n          stream.getTracks().forEach(function(track) {\n            track.stop();\n          });\n          throw new DOMException('The object can not be found here.',\n                                 'NotFoundError');\n        }\n        return stream;\n      }, function(e) {\n        return Promise.reject(shimError_(e));\n      });\n    };\n  }\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\n    if (browserDetails.version < 44) {\n      return getUserMedia_(constraints, onSuccess, onError);\n    }\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    console.warn('navigator.getUserMedia has been replaced by ' +\n                 'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n};\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar browserDetails = require('../utils').browserDetails;\n\nvar firefoxShim = {\n  shimOnTrack: function() {\n    if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n        window.RTCPeerConnection.prototype)) {\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n        get: function() {\n          return this._ontrack;\n        },\n        set: function(f) {\n          if (this._ontrack) {\n            this.removeEventListener('track', this._ontrack);\n            this.removeEventListener('addstream', this._ontrackpoly);\n          }\n          this.addEventListener('track', this._ontrack = f);\n          this.addEventListener('addstream', this._ontrackpoly = function(e) {\n            e.stream.getTracks().forEach(function(track) {\n              var event = new Event('track');\n              event.track = track;\n              event.receiver = {track: track};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            }.bind(this));\n          }.bind(this));\n        }\n      });\n    }\n  },\n\n  shimSourceObject: function() {\n    // Firefox has supported mozSrcObject since FF22, unprefixed in 42.\n    if (typeof window === 'object') {\n      if (window.HTMLMediaElement &&\n        !('srcObject' in window.HTMLMediaElement.prototype)) {\n        // Shim the srcObject property, once, when HTMLMediaElement is found.\n        Object.defineProperty(window.HTMLMediaElement.prototype, 'srcObject', {\n          get: function() {\n            return this.mozSrcObject;\n          },\n          set: function(stream) {\n            this.mozSrcObject = stream;\n          }\n        });\n      }\n    }\n  },\n\n  shimPeerConnection: function() {\n    if (typeof window !== 'object' || !(window.RTCPeerConnection ||\n        window.mozRTCPeerConnection)) {\n      return; // probably media.peerconnection.enabled=false in about:config\n    }\n    // The RTCPeerConnection object.\n    if (!window.RTCPeerConnection) {\n      window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n        if (browserDetails.version < 38) {\n          // .urls is not supported in FF < 38.\n          // create RTCIceServers with a single url.\n          if (pcConfig && pcConfig.iceServers) {\n            var newIceServers = [];\n            for (var i = 0; i < pcConfig.iceServers.length; i++) {\n              var server = pcConfig.iceServers[i];\n              if (server.hasOwnProperty('urls')) {\n                for (var j = 0; j < server.urls.length; j++) {\n                  var newServer = {\n                    url: server.urls[j]\n                  };\n                  if (server.urls[j].indexOf('turn') === 0) {\n                    newServer.username = server.username;\n                    newServer.credential = server.credential;\n                  }\n                  newIceServers.push(newServer);\n                }\n              } else {\n                newIceServers.push(pcConfig.iceServers[i]);\n              }\n            }\n            pcConfig.iceServers = newIceServers;\n          }\n        }\n        return new mozRTCPeerConnection(pcConfig, pcConstraints);\n      };\n      window.RTCPeerConnection.prototype = mozRTCPeerConnection.prototype;\n\n      // wrap static methods. Currently just generateCertificate.\n      if (mozRTCPeerConnection.generateCertificate) {\n        Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n          get: function() {\n            return mozRTCPeerConnection.generateCertificate;\n          }\n        });\n      }\n\n      window.RTCSessionDescription = mozRTCSessionDescription;\n      window.RTCIceCandidate = mozRTCIceCandidate;\n    }\n\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          var nativeMethod = RTCPeerConnection.prototype[method];\n          RTCPeerConnection.prototype[method] = function() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                RTCIceCandidate : RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          };\n        });\n\n    // support for addIceCandidate(null or undefined)\n    var nativeAddIceCandidate =\n        RTCPeerConnection.prototype.addIceCandidate;\n    RTCPeerConnection.prototype.addIceCandidate = function() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n\n    if (browserDetails.version < 48) {\n      // shim getStats with maplike support\n      var makeMapStats = function(stats) {\n        var map = new Map();\n        Object.keys(stats).forEach(function(key) {\n          map.set(key, stats[key]);\n          map[key] = stats[key];\n        });\n        return map;\n      };\n\n      var nativeGetStats = RTCPeerConnection.prototype.getStats;\n      RTCPeerConnection.prototype.getStats = function(selector, onSucc, onErr) {\n        return nativeGetStats.apply(this, [selector || null])\n          .then(function(stats) {\n            return makeMapStats(stats);\n          })\n          .then(onSucc, onErr);\n      };\n    }\n  }\n};\n\n// Expose public methods.\nmodule.exports = {\n  shimOnTrack: firefoxShim.shimOnTrack,\n  shimSourceObject: firefoxShim.shimSourceObject,\n  shimPeerConnection: firefoxShim.shimPeerConnection,\n  shimGetUserMedia: require('./getusermedia')\n};\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n'use strict';\nvar safariShim = {\n  // TODO: DrAlex, should be here, double check against LayoutTests\n  // shimOnTrack: function() { },\n\n  // TODO: once the back-end for the mac port is done, add.\n  // TODO: check for webkitGTK+\n  // shimPeerConnection: function() { },\n\n  shimGetUserMedia: function() {\n    navigator.getUserMedia = navigator.webkitGetUserMedia;\n  }\n};\n\n// Expose public methods.\nmodule.exports = {\n  shimGetUserMedia: safariShim.shimGetUserMedia\n  // TODO\n  // shimOnTrack: safariShim.shimOnTrack,\n  // shimPeerConnection: safariShim.shimPeerConnection\n};\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n\n'use strict';\n\n// Shimming starts here.\n(function() {\n  // Utils.\n  var logging = require('./utils').log;\n  var browserDetails = require('./utils').browserDetails;\n  // Export to the adapter global object visible in the browser.\n  module.exports.browserDetails = browserDetails;\n  module.exports.extractVersion = require('./utils').extractVersion;\n  module.exports.disableLog = require('./utils').disableLog;\n\n  // Uncomment the line below if you want logging to occur, including logging\n  // for the switch statement below. Can also be turned on in the browser via\n  // adapter.disableLog(false), but then logging from the switch statement below\n  // will not appear.\n  // require('./utils').disableLog(false);\n\n  // Browser shims.\n  var chromeShim = require('./chrome/chrome_shim') || null;\n  var edgeShim = require('./edge/edge_shim') || null;\n  var firefoxShim = require('./firefox/firefox_shim') || null;\n  var safariShim = require('./safari/safari_shim') || null;\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'opera': // fallthrough as it uses chrome shims\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection) {\n        logging('Chrome shim is not included in this adapter release.');\n        return;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      module.exports.browserShim = chromeShim;\n\n      chromeShim.shimGetUserMedia();\n      chromeShim.shimMediaStream();\n      chromeShim.shimSourceObject();\n      chromeShim.shimPeerConnection();\n      chromeShim.shimOnTrack();\n      break;\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection) {\n        logging('Firefox shim is not included in this adapter release.');\n        return;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      module.exports.browserShim = firefoxShim;\n\n      firefoxShim.shimGetUserMedia();\n      firefoxShim.shimSourceObject();\n      firefoxShim.shimPeerConnection();\n      firefoxShim.shimOnTrack();\n      break;\n    case 'edge':\n      if (!edgeShim || !edgeShim.shimPeerConnection) {\n        logging('MS edge shim is not included in this adapter release.');\n        return;\n      }\n      logging('adapter.js shimming edge.');\n      // Export to the adapter global object visible in the browser.\n      module.exports.browserShim = edgeShim;\n\n      edgeShim.shimGetUserMedia();\n      edgeShim.shimPeerConnection();\n      break;\n    case 'safari':\n      if (!safariShim) {\n        logging('Safari shim is not included in this adapter release.');\n        return;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      module.exports.browserShim = safariShim;\n\n      safariShim.shimGetUserMedia();\n      break;\n    default:\n      logging('Unsupported browser!');\n  }\n})();\n","// getUserMedia helper by @HenrikJoreteg used for navigator.getUserMedia shim\nvar adapter = require('webrtc-adapter');\n\nmodule.exports = function (constraints, cb) {\n    var error;\n    var haveOpts = arguments.length === 2;\n    var defaultOpts = {video: true, audio: true};\n\n    var denied = 'PermissionDeniedError';\n    var altDenied = 'PERMISSION_DENIED';\n    var notSatisfied = 'ConstraintNotSatisfiedError';\n\n    // make constraints optional\n    if (!haveOpts) {\n        cb = constraints;\n        constraints = defaultOpts;\n    }\n\n    // treat lack of browser support like an error\n    if (typeof navigator === 'undefined' || !navigator.getUserMedia) {\n        // throw proper error per spec\n        error = new Error('MediaStreamError');\n        error.name = 'NotSupportedError';\n\n        // keep all callbacks async\n        return setTimeout(function () {\n            cb(error);\n        }, 0);\n    }\n\n    // normalize error handling when no media types are requested\n    if (!constraints.audio && !constraints.video) {\n        error = new Error('MediaStreamError');\n        error.name = 'NoMediaRequestedError';\n\n        // keep all callbacks async\n        return setTimeout(function () {\n            cb(error);\n        }, 0);\n    }\n\n    navigator.mediaDevices.getUserMedia(constraints)\n    .then(function (stream) {\n        cb(null, stream);\n    }).catch(function (err) {\n        var error;\n        // coerce into an error object since FF gives us a string\n        // there are only two valid names according to the spec\n        // we coerce all non-denied to \"constraint not satisfied\".\n        if (typeof err === 'string') {\n            error = new Error('MediaStreamError');\n            if (err === denied || err === altDenied) {\n                error.name = denied;\n            } else {\n                error.name = notSatisfied;\n            }\n        } else {\n            // if we get an error object make sure '.name' property is set\n            // according to spec: http://dev.w3.org/2011/webrtc/editor/getusermedia.html#navigatorusermediaerror-and-navigatorusermediaerrorcallback\n            error = err;\n            if (!error.name) {\n                // this is likely chrome which\n                // sets a property called \"ERROR_DENIED\" on the error object\n                // if so we make sure to set a name\n                if (error[denied]) {\n                    err.name = denied;\n                } else {\n                    err.name = notSatisfied;\n                }\n            }\n        }\n\n        cb(error);\n    });\n};\n","/**\n * The 3 vertices of a 2D triangle covering the viewport in NDC coordinates ([-1, 1]).\n *\n * @export\n * @type {array.<array.<number>>}\n */\nexport const vertices = [[-1, -1], [-1, 4], [4, -1]];\n\nexport const count = vertices.length;\nexport const dim = 2;\n\n/**\n * The flat array of the above triangle, to be bound as a WebGL attribute buffer for\n * rendering the triangle in the vertex shader.\n * These positions will result in clipped NDC coordinates ([-1, 1]) over the\n * viewport's width and height.\n *\n * @export\n * @type {array.<number>}\n */\nexport const positions = vertices.flat();\n\nexport default positions;\n","/**\n * Creates an iterable array of the given length, containing empty entries.\n *\n * @param {number} n The number of elements to create.\n *\n * @returns {array} An array of the given number of empty elements.\n */\nexport const range = (n) => Array(n).fill();\n\nexport default range;\n","const r = Array.prototype.reduce;\n\n/**\n * Reduce an array-like object.\n * Similar to native, but with iteratee-first arguments.\n * Supports the native single-argument behaviour.\n *\n * @param {function} f The iteratee function, given standard arguments, plus the\n *     `out` argument.\n * @param {array} a The list to reduce over (array or array-like object).\n * @param {*} [out] The initial accumulator, if given; otherwise, uses standard\n *     `Array.reduce` behaviour.\n *\n * @returns {*} The result of running the reducer iteratee function over all\n *     elements of the list.\n */\nexport const reduce = (f, a, out) =>\n    // Needs separate `call` because native detects even `undefined` parameter.\n    ((out === undefined)? r.call(a, f) : r.call(a, f, out));\n\nexport default reduce;\n","import { reduce } from './reduce';\n\n/**\n * Map an array-like object.\n * Similar to native, but with iteratee-first arguments; and allows the object\n * into which properties will be mapped to be defined (a new array, by default),\n * avoiding always creating new arrays.\n *\n * @param {function} f The iteratee function, given standard `Array.map`\n *     arguments, plus the output object.\n * @param {array} a The list to map over (array or array-like object).\n * @param {*} [out=[]] The initial accumulator, if given; `a`, if defined and\n *     falsey.\n *\n * @returns {*} The `out` object, having been mapped through the iteratee\n *     function over the list.\n */\nexport const map = (f, a, out = []) => reduce((out, v, i) => {\n        out[i] = f(v, i, a, out);\n\n        return out;\n    },\n    a, (out || a));\n\nexport default map;\n","const e = Array.prototype.forEach;\n\n/**\n * Iterates a function over every element of a list, returning the list.\n *\n * @param {function} f The iteratee function.\n * @param {array} a A list to iterate over (array or array-like object).\n *\n * @returns {array} The given list.\n */\nexport const each = (f, a) => {\n    e.call(a, f);\n\n    return a;\n}\n\nexport default each;\n","/**\n * Wraps an index within a given length, so that indexes greater than the length\n * loop back past 0, and indexes less than 0 loop backward from the length.\n * Similar to the indexing behaviour of `Array.slice`.\n *\n * @param {number} i The index to wrap.\n * @param {number} l The length to wrap the index within.\n *\n * @returns {number} The index wrapped within the length.\n */\nexport const wrapIndex = (i, l) => ((i%l)+l)%l;\n\n/**\n * Gives the entry at a wrapped index of a given list, never exceeds its bounds.\n *\n * @see wrapIndex\n *\n * @param {number} i The index to wrap.\n * @param {array} a A list to index (array or array-like object).\n * @param {number} a.length The length property of the given list.\n *\n * @returns {*} The entry at the wrapped index of the given list.\n */\nexport const wrapGet = (i, a) => a[wrapIndex(i, a.length)];\n\nexport const wrap = { index: wrapIndex, get: wrapGet };\n\nexport default wrap;\n","module.exports=\"precision highp float;\\n#define GLSLIFY 1\\n\\nattribute vec2 position;\\n\\nvarying vec2 uv;\\n\\n// Translation for UV NDC to texture coordinates.\\nconst vec2 offset = vec2(0.5);\\n\\nvoid main() {\\n    uv = (position*0.5)+offset;\\n    gl_Position = vec4(position, 0, 1);\\n}\\n\";","module.exports=\"/**\\n * Optical flow fragment shader, for convenience.\\n *\\n * @see ./index.frag\\n */\\n\\n#define opticalFlowMap_none 0\\n#define opticalFlowMap_range 1\\n#ifndef opticalFlowMap\\n    #define opticalFlowMap opticalFlowMap_none\\n#endif\\n\\nprecision highp float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D next;\\nuniform sampler2D past;\\nuniform float offset;\\nuniform float lambda;\\nuniform float alpha;\\n\\n// Optionally map the flow ([-1, 1]) to a different range (e.g: [0, 255]).\\n#if opticalFlowMap == opticalFlowMap_range\\n    uniform vec4 inRange;\\n    uniform vec4 outRange;\\n\\n    float map(float value, float inMin, float inMax, float outMin, float outMax) {\\n  return outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);\\n}\\n\\nvec2 map(vec2 value, vec2 inMin, vec2 inMax, vec2 outMin, vec2 outMax) {\\n  return outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);\\n}\\n\\nvec3 map(vec3 value, vec3 inMin, vec3 inMax, vec3 outMin, vec3 outMax) {\\n  return outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);\\n}\\n\\nvec4 map(vec4 value, vec4 inMin, vec4 inMax, vec4 outMin, vec4 outMax) {\\n  return outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);\\n}\\n\\n#endif\\n\\nvarying vec2 uv;\\n\\n/**\\n * Optical flow GLSL module.\\n * May work best if the views are pre-processed (e.g: blur).\\n *\\n * @see https://forum.openframeworks.cc/t/ofxflowtools-optical-flow-fluid-dynamics-and-particles-in-glsl/15470\\n * @see https://github.com/moostrik/ofxFlowTools\\n * @see https://github.com/diwi/PixelFlow\\n * @see http://thomasdiewald.com/blog/?p=2766\\n * @see https://adamferriss.com/gush/\\n * @see https://github.com/princemio/ofxMIOFlowGLSL/blob/master/src/FlowShader.cpp\\n */\\n\\n#define opticalFlowPixel_extern 0\\n#define opticalFlowPixel_normal 1\\n#define opticalFlowPixel_luma 2\\n#ifndef opticalFlowPixel\\n    #define opticalFlowPixel opticalFlowPixel_luma\\n#endif\\n\\n#if opticalFlowPixel == opticalFlowPixel_luma\\n    float luma(vec3 color) {\\n  return dot(color, vec3(0.299, 0.587, 0.114));\\n}\\n\\nfloat luma(vec4 color) {\\n  return dot(color.rgb, vec3(0.299, 0.587, 0.114));\\n}\\n\\n    vec4 pixel(sampler2D texture, vec2 uv) {\\n        vec4 color = texture2D(texture, uv);\\n\\n        return vec4(vec3(luma(color)), color.a);\\n    }\\n#elif opticalFlowPixel == opticalFlowPixel_normal\\n    vec4 pixel(sampler2D texture, vec2 uv) {\\n        return texture2D(texture, uv);\\n    }\\n#else\\n    // To provide external `pixel` lookup function.\\n    vec4 pixel(sampler2D texture, vec2 uv);\\n#endif\\n\\n// @todo Sample mimaps at different LODs/scales to capture wider features.\\nvec2 opticalFlow(in vec2 uv, in sampler2D next, in sampler2D past, in float offset,\\n        in float lambda) {\\n    vec2 off = vec2(offset, 0.0);\\n\\n    vec4 gradX = (pixel(next, uv+off.xy)-pixel(next, uv-off.xy))+\\n        (pixel(past, uv+off.xy)-pixel(past, uv-off.xy));\\n\\n    vec4 gradY = (pixel(next, uv+off.yx)-pixel(next, uv-off.yx))+\\n        (pixel(past, uv+off.yx)-pixel(past, uv-off.yx));\\n\\n    vec4 gradMag = sqrt((gradX*gradX)+(gradY*gradY)+vec4(lambda));\\n\\n    vec4 diff = pixel(next, uv)-pixel(past, uv);\\n\\n    return vec2((diff*(gradX/gradMag)).x, (diff*(gradY/gradMag)).x);\\n}\\n\\nvec2 opticalFlow(in vec2 uv, in sampler2D views[2], in float offset,\\n        in float lambda) {\\n    return opticalFlow(uv, views[0], views[1], offset, lambda);\\n}\\n\\nvoid main() {\\n    vec2 flow = opticalFlow(uv, next, past, offset, lambda);\\n    float strength = 1.0;\\n\\n    // Optionally map the flow ([-1, 1]) to a different range (e.g: [0, 255]).\\n    #if opticalFlowMap == opticalFlowMap_range\\n        strength = dot(flow, flow);\\n        flow = map(flow, inRange.xy, inRange.zw, outRange.xy, outRange.zw);\\n    #endif\\n\\n    gl_FragColor = vec4(flow, 0.0, clamp(strength*alpha, 0.0, 1.0));\\n}\\n\";","module.exports=\"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D frame;\\nuniform vec2 axis;\\nuniform float width;\\nuniform float height;\\n\\nvarying vec2 uv;\\n\\nvec4 blur13(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\\n  vec4 color = vec4(0.0);\\n  vec2 off1 = vec2(1.411764705882353) * direction;\\n  vec2 off2 = vec2(3.2941176470588234) * direction;\\n  vec2 off3 = vec2(5.176470588235294) * direction;\\n  color += texture2D(image, uv) * 0.1964825501511404;\\n  color += texture2D(image, uv + (off1 / resolution)) * 0.2969069646728344;\\n  color += texture2D(image, uv - (off1 / resolution)) * 0.2969069646728344;\\n  color += texture2D(image, uv + (off2 / resolution)) * 0.09447039785044732;\\n  color += texture2D(image, uv - (off2 / resolution)) * 0.09447039785044732;\\n  color += texture2D(image, uv + (off3 / resolution)) * 0.010381362401148057;\\n  color += texture2D(image, uv - (off3 / resolution)) * 0.010381362401148057;\\n  return color;\\n}\\n\\nvoid main() {\\n    gl_FragColor = blur13(frame, uv, vec2(width, height), axis);\\n}\\n\";","module.exports=\"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D next;\\nuniform sampler2D past;\\nuniform float fade;\\n\\nvarying vec2 uv;\\n\\nvoid main() {\\n    vec4 p = texture2D(past, uv)*fade;\\n    vec4 n = texture2D(next, uv);\\n\\n    // @todo Work out why visual artefacts remain.\\n    gl_FragColor = mix(p, n, n.a);\\n}\\n\";","module.exports=\"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D frame;\\n\\n// Reverse any mapping performed in the flow shader.\\nuniform vec4 inRange;\\nuniform vec4 outRange;\\n\\nvarying vec2 uv;\\n\\nconst float PI = 3.14159265359;\\n\\nconst float TWO_PI_1604150559 = 6.28318530718;\\n\\nfloat hue2rgb(float f1, float f2, float hue) {\\n    if (hue < 0.0)\\n        hue += 1.0;\\n    else if (hue > 1.0)\\n        hue -= 1.0;\\n    float res;\\n    if ((6.0 * hue) < 1.0)\\n        res = f1 + (f2 - f1) * 6.0 * hue;\\n    else if ((2.0 * hue) < 1.0)\\n        res = f2;\\n    else if ((3.0 * hue) < 2.0)\\n        res = f1 + (f2 - f1) * ((2.0 / 3.0) - hue) * 6.0;\\n    else\\n        res = f1;\\n    return res;\\n}\\n\\nvec3 hsl2rgb(vec3 hsl) {\\n    vec3 rgb;\\n    \\n    if (hsl.y == 0.0) {\\n        rgb = vec3(hsl.z); // Luminance\\n    } else {\\n        float f2;\\n        \\n        if (hsl.z < 0.5)\\n            f2 = hsl.z * (1.0 + hsl.y);\\n        else\\n            f2 = hsl.z + hsl.y - hsl.y * hsl.z;\\n            \\n        float f1 = 2.0 * hsl.z - f2;\\n        \\n        rgb.r = hue2rgb(f1, f2, hsl.x + (1.0/3.0));\\n        rgb.g = hue2rgb(f1, f2, hsl.x);\\n        rgb.b = hue2rgb(f1, f2, hsl.x - (1.0/3.0));\\n    }   \\n    return rgb;\\n}\\n\\nvec3 hsl2rgb(float h, float s, float l) {\\n    return hsl2rgb(vec3(h, s, l));\\n}\\n\\nfloat map(float value, float inMin, float inMax, float outMin, float outMax) {\\n  return outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);\\n}\\n\\nvec2 map(vec2 value, vec2 inMin, vec2 inMax, vec2 outMin, vec2 outMax) {\\n  return outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);\\n}\\n\\nvec3 map(vec3 value, vec3 inMin, vec3 inMax, vec3 outMin, vec3 outMax) {\\n  return outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);\\n}\\n\\nvec4 map(vec4 value, vec4 inMin, vec4 inMax, vec4 outMin, vec4 outMax) {\\n  return outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);\\n}\\n\\nvoid main() {\\n    vec4 data = texture2D(frame, uv);\\n    // Reverse any mapping performed in the flow shader.\\n    vec2 flow = map(data.xy, outRange.xy, outRange.zw, inRange.xy, inRange.zw);\\n    float a = data.a;\\n    // Angle to hue - red right, green up, cyan left, magenta down.\\n    vec3 color = hsl2rgb((atan(flow.y, flow.x)/TWO_PI_1604150559), 0.9*a, 0.6*a);\\n\\n    gl_FragColor = vec4(color, a);\\n}\\n\";","// Any rendering library, but made with `regl` in mind.\nimport getRegl from 'regl';\nimport getUserMedia from 'getusermedia';\nimport { positions, count } from '@epok.tech/gl-screen-triangle';\nimport range from '@epok.tech/fn-lists/range';\nimport map from '@epok.tech/fn-lists/map';\nimport each from '@epok.tech/fn-lists/each';\nimport { wrapGet } from '@epok.tech/fn-lists/wrap-index';\n\nimport vert from '@epok.tech/gl-screen-triangle/uv-texture.vert.glsl';\nimport flowFrag from '../index.frag.glsl';\nimport blurFrag from './blur.frag.glsl';\nimport blendFrag from './blend.frag.glsl';\nimport viewFrag from './view.frag.glsl';\n\nconst canvas = document.querySelector('canvas');\nconst video = document.querySelector('video');\n\nconst regl = getRegl(canvas);\n\n// Each axis of blur.\nconst blurMaps = map(() => regl.texture(), range(2), 0);\nconst blurFrames = map((c) => regl.framebuffer({ color: c }), blurMaps);\n\n// Past and present frames for optical flow.\nconst flowMaps = map(() => regl.texture(), range(2), 0);\nconst flowFrames = map((c) => regl.framebuffer({ color: c }), flowMaps);\nconst flowTo = regl.framebuffer();\n\n// Past and present frames to blend.\nconst blendFrames = map(() => regl.framebuffer(), range(2), 0);\n\nconst resizers = [...blurFrames, ...flowFrames, flowTo, ...blendFrames];\n\nvideo.autoplay = false;\n\nconst inRange = [-1, -1, 1, 1];\nconst outRange = [0, 0, 1, 1];\n\nconst props = self.opticalFlow = {\n    videoSample: { data: video, flipY: true },\n    blurVideo: {\n        axes: [[1, 0], [0, 1]],\n        /**\n         * The `passes` props array will blur in both axes one after the other.\n         * Blurs the first axis of the first blur frame into the next frame,\n         * then the last axis of that frame into the flow input.\n         *\n         * @see drawBlurVideo\n         */\n        passes: map((v, a) => ({ axis: a }), blurFrames)\n    },\n    flow: {\n        // Pixels units; will divide `offset` by the video resolution later.\n        offset: 3,\n        lambda: 1e-2, alpha: 50, inRange, outRange\n    },\n    blurPast: {\n        axes: [[1, 0], [0, 1]],\n        /**\n         * The `passes` props array will blur in both axes one after the other.\n         * Blurs the first axis of the first blur frame into the next frame,\n         * then the last axis of that frame into the past blend frame.\n         *\n         * @see drawBlurPast\n         */\n        passes: map((v, a) => ({ axis: a }), blurFrames)\n    },\n    blend: { fade: 0.99 },\n    view: { inRange, outRange }\n};\n\nconst clearView = { color: [0, 0, 0, 0], depth: 1, stencil: 0 };\nconst clearBlurs = map((f) => ({ ...clearView, framebuffer: f }), blurFrames);\nconst clearFlows = map((f) => ({ ...clearView, framebuffer: f }), flowFrames);\nconst clearFlow = { ...clearView, framebuffer: flowTo };\nconst clearBlends = map((f) => ({ ...clearView, framebuffer: f }), blendFrames);\n\nfunction clear(tick){\n    regl.clear(clearView);\n    regl.clear(wrapGet(tick, clearFlows));\n    regl.clear(clearFlow);\n    regl.clear(wrapGet(tick, clearBlends));\n}\n\nconst drawScreen = regl({ vert, attributes: { position: positions }, count });\n\n// Draw the current video frame and blur it across both axes.\nconst drawBlur = regl({\n    frag: blurFrag,\n    uniforms: {\n        // Swap by `axis`; allow `frame` to override if given.\n        frame: (c, { frame: f, axis: a }) => (f || wrapGet(a+1, blurFrames)),\n        // Pass `axis` of declared `axes`; easier blur direction/scale control.\n        axis: (c, { axes, axis: a }) => axes[a],\n        radius: regl.prop('radius'),\n        width: regl.context('drawingBufferWidth'),\n        height: regl.context('drawingBufferHeight')\n    },\n    // Swap by `axis`; allow `to` to  override `framebuffer` if given.\n    framebuffer: (c, { to, axis: a }) => (to || wrapGet(a, blurFrames))\n});\n\n// Draws the 2 `passes` of `blur` across both axes one after the other.\nfunction drawBlurProps(blur) {\n    // Pass any common `props` from `blur` to each of `passes`.\n    return drawBlur(map((a) => Object.assign(a, blur, a), blur.passes, 0));\n}\n\n// Blur the input video's current frame, into the next flow frame.\nfunction drawBlurVideo(tick) {\n    const { videoSample: s, blurVideo: b } = props;\n\n    each(regl.clear, clearBlurs);\n    blurMaps[1](s);\n    b.passes[1].to = wrapGet(tick, flowFrames);\n\n    return drawBlurProps(b);\n}\n\n// The main function of concern - get the optical flow from the last 2 frames.\n\nconst drawFlow = regl({\n    frag: '#define opticalFlowMap opticalFlowMap_range\\n'+flowFrag,\n    uniforms: {\n        next: ({ tick: t }) => wrapGet(t, flowMaps),\n        past: ({ tick: t }) => wrapGet(t+1, flowMaps),\n        offset: regl.prop('offset'),\n        lambda: regl.prop('lambda'),\n        alpha: regl.prop('alpha'),\n        inRange: regl.prop('inRange'),\n        outRange: regl.prop('outRange')\n    },\n    framebuffer: flowTo\n});\n\nconst drawFlowProps = () => drawFlow(props.flow);\n\n// Blur the past blend frame.\nfunction drawBlurPast(tick) {\n    const b = props.blurPast;\n    const ps = b.passes;\n\n    each(regl.clear, clearBlurs);\n    ps[0].frame = wrapGet(tick+1, blendFrames);\n\n    return drawBlurProps(b);\n}\n\n// Blend the `past` and `next` optical-flow frames.\nconst drawBlend = regl({\n    frag: blendFrag,\n    uniforms: {\n        next: flowTo,\n        // This will have the blurred result of the past frame.\n        past: wrapGet(-1, blurFrames),\n        fade: regl.prop('fade')\n    },\n    framebuffer: ({ tick: t }) => wrapGet(t, blendFrames)\n});\n\nconst drawBlendProps = () => drawBlend(props.blend);\n\nconst drawView = regl({\n    frag: viewFrag,\n    uniforms: {\n        frame: ({ tick: t }) => wrapGet(t, blendFrames),\n        inRange: regl.prop('inRange'),\n        outRange: regl.prop('outRange')\n    }\n});\n\nconst drawViewProps = () => drawView(props.view);\n\nfunction drawScene(tick){\n    // Blur the input video's current frame.\n    drawBlurVideo(tick);\n    // Get the optical flow from the last 2 frames.\n    drawFlowProps();\n    // Blur the past frame.\n    drawBlurPast(tick);\n    // Blend the last 2 frames with some amount of `fade`.\n    drawBlendProps();\n    // Draw to the screen.\n    drawViewProps();\n}\n\nfunction draw({ tick: t }) {\n    clear(t);\n    drawScene(t);\n}\n\nvideo.addEventListener('canplay', () => {\n    const { videoWidth: w, videoHeight: h } = video;\n\n    canvas.width = w;\n    canvas.height = h;\n    each((v) => v.resize(w, video.videoHeight), resizers);\n    // Pixels units; divide `offset` by the video resolution.\n    props.flow.offset /= Math.max(w, h, 1e3);\n    video.play();\n\n    regl.frame(() => drawScreen(draw));\n});\n\ngetUserMedia({ video: true }, (e, stream) => {\n    if(e) { console.warn(e); }\n    else if('srcObject' in video) { video.srcObject = stream; }\n    else { video.src = self.URL.createObjectURL(stream); }\n});\n"]}